


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos,DATA
    2 00000000         ;vuestras variables y constantes
    3 00000000 00000000 
                       reloj   DCD              0           ;contador de centes
                                                            imas de segundo
    4 00000004 00000008 
                       max     DCD              8           ;velocidad de movim
                                                            iento (en centesima
                                                            s s.)
    5 00000008 00000000 
                       cont    DCD              0           ;instante siguiente
                                                             movimiento
    6 0000000C 00      dirx    DCB              0           ;direccion mov. car
                                                            acter ‘H’ (-1 izda.
                                                            ,0 stop,1 der.)
    7 0000000D 00      diry    DCB              0           ;direccion mov. car
                                                            acter ‘H’ (-1 arrib
                                                            a,0 stop,1 abajo)
    8 0000000E 00      fin     DCB              0           ;indicador fin de p
                                                            rograma (si vale 1)
                                                            
    9 0000000F         
   10 0000000F 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       road    SPACE            16
   11 0000001F 0F      roadi   DCB              15
   12 00000020 40007E00 
                       primer  EQU              0x40007E00
   13 00000020 40007FE0 
                       ultim   EQU              0x40007FE0
   14 00000020 08      spr     DCB              8
   15 00000021 00      sprm    DCB              0
   16 00000022 40007FEC 
                       inicar  EQU              0x40007FEC
   17 00000022 00 00 40007FEC 
                       coche   DCD              0x40007FEC
   18 00000028 47 41 4D 
              45 4F 56 
              45 52 20 mensa   DCB              "GAMEOVER "
   19 00000031 40007EE8 
                       texto   EQU              0x40007EE8
   20 00000031 4C 4F 41 
              44 49 4E 
              47 2E 2E 
              2E 20    loading DCB              "LOADING... "
   21 0000003C 53 43 4F 
              52 45 3A 
              20       scrtxt  DCB              "SCORE: "
   22 00000043 30 30 30 
              30       score   DCB              "0000"
   23 00000047 08      scrmax  DCB              8
   24 00000048 04      scrcont DCB              4
   25 00000049 4C 56 4C 
              20       lvltxt  DCB              "LVL "
   26 0000004D 01      lvl     DCB              1
   27 0000004E 00 00 00000000 



ARM Macro Assembler    Page 2 


                       lvlmax  DCD              0
   28 00000054 000001F4 
                       lvltime EQU              500
   29 00000054 00      obnum   DCB              0
   30 00000055 01 00 00 
                       obpos   DCB              1,0,0
   31 00000058 40007E00 
              40007D00 
              40007D80 obdir   DCD              0x40007E00,0x40007D00,0x40007D8
0
   32 00000064 40007DE0 
              40007D00 
              40007DA0 obspr   DCD              0x40007DE0,0x40007D00,0x40007DA
0
   33 00000070         
   34 00000070         
   35 00000070 FFFFF010 
                       VICIntEnable
                               EQU              0xFFFFF010  ;activar IRQs
   36 00000070 FFFFF014 
                       VICIntEnClr
                               EQU              0xFFFFF014  ;desactivar IRQs
   37 00000070 FFFFF018 
                       VICSoftInt
                               EQU              0xFFFFF018  ;generar IRQs SW
   38 00000070 FFFFF01C 
                       VICSoftIntClear
                               EQU              0xFFFFF01C  ;bajar IRQs SW
   39 00000070 FFFFF100 
                       VICVectAddr0
                               EQU              0xFFFFF100  ;vector interrupcio
                                                            nes
   40 00000070 FFFFF030 
                       VICVectAddr
                               EQU              0xFFFFF030  ;registro para EOI
   41 00000070         
   42 00000070 E0010000 
                       TEC_DAT EQU              0xE0010000  ;reg. dato teclado 
                                                            UART1
   43 00000070         
   44 00000070 E0028004 
                       IOSET   EQU              0xE0028004  ;reg. datos GPIO(ac
                                                            tivar)
   45 00000070 E002800C 
                       IOCLR   EQU              0xE002800C  ;reg. datos GPIP(de
                                                            sactivar)
   46 00000070 E0004000 
                       TO_IR   EQU              0xE0004000  ;reg. para bajar pe
                                                            ticiones IRQ4
   47 00000070 00      vac     DCB              0
   48 00000071 00 00 00 
              00000000 reloj_so
                               DCD              0           ;var. para @RSI_tim
                                                            er_SO
   49 00000078 00000000 
                       tecl_so DCD              0           ;var para @RSI_tecl
                                                            ado_so
   50 0000007C         
   51 0000007C         



ARM Macro Assembler    Page 3 


   52 0000007C                 AREA             codigo,CODE
   53 00000000                 EXPORT           inicio      ; forma de enlazar 
                                                            con el startup.s
   54 00000000                 IMPORT           srand       ; para poder invoca
                                                            r SBR srand
   55 00000000                 IMPORT           rand        ; para poder invoca
                                                            r SBR srand
   56 00000000         inicio                               ; se recomienda pon
                                                            er punto de parada 
                                                            (breakpoint) en la 
                                                            primera
   57 00000000         ; instruccion de código para poder ejecutar todo el Star
                       tup de golpe
   58 00000000         
   59 00000000         
   60 00000000         ;programar @IRQ4 -> RSI_reloj
   61 00000000 E59F092C        LDR              r0,=VICVectAddr0
   62 00000004 E59F192C        LDR              r1,=reloj_so
   63 00000008 E3A02004        mov              r2,#4
   64 0000000C E7903102        ldr              r3, [r0,r2,LSL #2]
   65 00000010 E5813000        str              r3, [r1]
   66 00000014         
   67 00000014 E59F1920        LDR              r1,=RSI_reloj
   68 00000018 E7801102        str              r1, [r0,r2,LSL #2]
   69 0000001C         
   70 0000001C         ;programar @IRQ7 -> RSI_teclado
   71 0000001C E59F0910        LDR              r0,=VICVectAddr0
   72 00000020 E59F1918        LDR              r1,=tecl_so
   73 00000024 E3A02007        mov              r2,#7
   74 00000028 E7903102        ldr              r3, [r0,r2,LSL #2]
   75 0000002C E5813000        str              r3, [r1]
   76 00000030         
   77 00000030 E59F190C        LDR              r1,=RSI_teclado
   78 00000034 E7801102        str              r1, [r0,r2,LSL #2]
   79 00000038         
   80 00000038         ;activar IRQ4,IRQ7
   81 00000038 E59F0908        LDR              r0,=VICIntEnable
   82 0000003C E3A01090        mov              r1,#2_10010000
   83 00000040 E5801000        str              r1, [r0]
   84 00000044         
   85 00000044         ;llama a srand
   86 00000044 E3A00003        mov              r0, #3
   87 00000048 E52D0004        PUSH             {r0}
   88 0000004C EBFFFFFE        bl               srand
   89 00000050 E28DD004        add              sp, sp, #4
   90 00000054         
   91 00000054         ;inicializar road
   92 00000054         
   93 00000054 E59F08F0 
                       pini    ldr              r0,=road
   94 00000058 E3A01000        mov              r1,#0
   95 0000005C E3A02008        mov              r2,#8
   96 00000060 E3510010 
                       iniroad cmp              r1,#16
   97 00000064 17C02001        strbne           r2,[r0,r1]
   98 00000068 12811001        addne            r1,r1,#1
   99 0000006C 1AFFFFFB        bne              iniroad
  100 00000070         
  101 00000070         ;pantalla inicial



ARM Macro Assembler    Page 4 


  102 00000070         
  103 00000070 E3A00020        mov              r0,#' '     ;dejo la pantalla e
                                                            n blanco
  104 00000074 E59F18D4        ldr              r1,=primer
  105 00000078 E59F28D4        ldr              r2,=ultim
  106 0000007C E2822020        add              r2,r2,#32
  107 00000080 E1520001 
                       borra1  cmp              r2,r1
  108 00000084 0A000002        beq              lvl1
  109 00000088 E5C10000        strb             r0,[r1]
  110 0000008C E2811001        add              r1,r1,#1
  111 00000090 EAFFFFFA        b                borra1
  112 00000094         
  113 00000094         ;escribo el lvl
  114 00000094 E59F08BC 
                       lvl1    ldr              r0,=lvl
  115 00000098 E5D00000        ldrb             r0,[r0]
  116 0000009C E2800030        add              r0,r0,#'0'
  117 000000A0 E59F28B4        ldr              r2,=texto
  118 000000A4 E59F18B4        ldr              r1,=lvltxt
  119 000000A8 E5911000        ldr              r1,[r1]
  120 000000AC E5821000        str              r1,[r2]
  121 000000B0 E2822004        add              r2,r2,#4
  122 000000B4 E5C20000        strb             r0,[r2]
  123 000000B8 E2822008        add              r2,r2,#8
  124 000000BC         
  125 000000BC E59F08A0        ldr              r0,=scrtxt
  126 000000C0 E5D01000        ldrb             r1,[r0]
  127 000000C4         
  128 000000C4 E3510020 
                       write1  cmp              r1,#' '
  129 000000C8 0A000004        beq              apunta1
  130 000000CC E5C21000        strb             r1,[r2]
  131 000000D0 E2822001        add              r2,r2,#1
  132 000000D4 E2800001        add              r0,r0,#1
  133 000000D8 E5D01000        ldrb             r1,[r0]
  134 000000DC EAFFFFF8        b                write1
  135 000000E0         
  136 000000E0 E59F0880 
                       apunta1 ldr              r0,=score   ;apunto el score
  137 000000E4 E2800003        add              r0,r0,#3
  138 000000E8 E5D01000        ldrb             r1,[r0]
  139 000000EC E3A03004        mov              r3,#4
  140 000000F0         
  141 000000F0 E3530000 
                       aqui5   cmp              r3,#0
  142 000000F4 0A000005        beq              load2
  143 000000F8 E5C21000        strb             r1,[r2]
  144 000000FC E2400001        sub              r0,r0,#1
  145 00000100 E5D01000        ldrb             r1,[r0]
  146 00000104 E2822001        add              r2,r2,#1
  147 00000108 E2433001        sub              r3,r3,#1
  148 0000010C EAFFFFF7        b                aqui5
  149 00000110         
  150 00000110         
  151 00000110 E59F0854 
                       load2   ldr              r0,=loading
  152 00000114 E282200A        add              r2,r2,#10
  153 00000118         



ARM Macro Assembler    Page 5 


  154 00000118 E5D01000 
                       aqui    ldrb             r1,[r0]     ;escribo el loading
                                                            ...
  155 0000011C E3510020        cmp              r1,#' '
  156 00000120 0A000003        beq              load1
  157 00000124 E5C21000        strb             r1,[r2]
  158 00000128 E2822001        add              r2,r2,#1
  159 0000012C E2800001        add              r0,r0,#1
  160 00000130 EAFFFFF8        b                aqui
  161 00000134         
  162 00000134         
  163 00000134 E3A0100A 
                       load1   mov              r1,#10      ;dejo un tiempo par
                                                            a que el jugador se
                                                             prepare
  164 00000138 E59F0830        ldr              r0,=cont
  165 0000013C E5902000 
                       load    ldr              r2,[r0]
  166 00000140 E3520000        cmp              r2,#0
  167 00000144 1AFFFFFC        bne              load
  168 00000148 E3A02008        mov              r2,#8
  169 0000014C E5C02000        strb             r2,[r0]
  170 00000150 02411001        subeq            r1,r1,#1
  171 00000154 E3510000        cmp              r1,#0
  172 00000158 0A000000        beq              lvlt
  173 0000015C 1AFFFFF6        bne              load
  174 00000160         
  175 00000160 E59F080C 
                       lvlt    ldr              r0,=lvlmax  ;cargo el tiempo pa
                                                            ra el lvl
  176 00000164 E59F180C        ldr              r1,=reloj
  177 00000168 E5911000        ldr              r1,[r1]
  178 0000016C E3A02F7D        ldr              r2,=lvltime
  179 00000170 E0811002        add              r1,r1,r2
  180 00000174 E5801000        str              r1,[r0]
  181 00000178         
  182 00000178         
  183 00000178 E3A00000 
                       escrib  mov              r0,#0       ;escribo 0 en la pa
                                                            ntalla
  184 0000017C E59F17CC        ldr              r1,=primer
  185 00000180 E59F27CC        ldr              r2,=ultim
  186 00000184 E2822020        add              r2,r2,#32
  187 00000188 E1520001 
                       borra2  cmp              r2,r1
  188 0000018C 0A000002        beq              sigue
  189 00000190 E5C10000        strb             r0,[r1]
  190 00000194 E2811001        add              r1,r1,#1
  191 00000198 EAFFFFFA        b                borra2
  192 0000019C         
  193 0000019C         ;dibujar pantalla inicial
  194 0000019C         
  195 0000019C E59F07AC 
                       sigue   ldr              r0,=primer
  196 000001A0 E3A02023        mov              r2,#'#'
  197 000001A4 E59F17A8        ldr              r1,=ultim
  198 000001A8 E1510000 
                       dcarre  cmp              r1,r0       ;dibujo la carreter
                                                            a



ARM Macro Assembler    Page 6 


  199 000001AC 4A000003        bmi              dcoche
  200 000001B0 E5C02008        strb             r2,[r0,#8]
  201 000001B4 E5C02010        strb             r2,[r0,#16]
  202 000001B8 E2800020        add              r0,r0,#32
  203 000001BC EAFFFFF9        b                dcarre
  204 000001C0         
  205 000001C0 E59F07B4 
                       dcoche  ldr              r0,=coche
  206 000001C4 E59F17B4        ldr              r1,=inicar
  207 000001C8 E5801000        str              r1,[r0]
  208 000001CC E5900000        ldr              r0,[r0]
  209 000001D0 E3A01048        mov              r1,#'H'
  210 000001D4 E5C01000        strb             r1,[r0]
  211 000001D8         
  212 000001D8         ;si toca mover coche
  213 000001D8 E59F07A4 
                       bucle   ldr              r0,=dirx    ;compruebo si hay q
                                                            ue mover en eje x
  214 000001DC E1D000D0        ldrsb            r0,[r0]
  215 000001E0 E3500000        cmp              r0,#0
  216 000001E4 0A000011        beq              ejey
  217 000001E8 E59F178C        ldr              r1,=coche
  218 000001EC E5913000        ldr              r3,[r1]
  219 000001F0 E3A02000        mov              r2,#0
  220 000001F4 E5C32000        strb             r2,[r3]     ;borro el coche
  221 000001F8 E0833000        add              r3,r3,r0
  222 000001FC         
  223 000001FC E5D37000        ldrb             r7,[r3]
  224 00000200 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  225 00000204 0A000003        beq              choc1
  226 00000208 E59F0778        ldr              r0,=fin
  227 0000020C E3A01001        mov              r1,#1
  228 00000210 E5C01000        strb             r1,[r0]
  229 00000214 EA000128        b                sifin
  230 00000218         
  231 00000218 E3A02048 
                       choc1   mov              r2,#'H'
  232 0000021C E5C32000        strb             r2,[r3]     ;dibujo coche nuevo
                                                            
  233 00000220         
  234 00000220 E5813000        str              r3,[r1]     ;actualizo @coche
  235 00000224         
  236 00000224 E3A01000        mov              r1,#0
  237 00000228 E59F0754        ldr              r0,=dirx
  238 0000022C E5C01000        strb             r1,[r0]     ;actualizo dirx=0
  239 00000230         
  240 00000230 E59F0754 
                       ejey    ldr              r0,=diry    ;compruebo si hay q
                                                            ue mover en eje y
  241 00000234 E1D000D0        ldrsb            r0,[r0]
  242 00000238 E3500000        cmp              r0,#0
  243 0000023C 0A00001B        beq              scr
  244 00000240 E59F1734        ldr              r1,=coche
  245 00000244 E5913000        ldr              r3,[r1]
  246 00000248         
  247 00000248 E3A02020        mov              r2,#32
  248 0000024C E3500001        cmp              r0,#1
  249 00000250 00434002        subeq            r4,r3,r2



ARM Macro Assembler    Page 7 


  250 00000254 10834002        addne            r4,r3,r2
  251 00000258 E59F56F0        ldr              r5,=primer
  252 0000025C E1540005        cmp              r4,r5
  253 00000260 4A000012        bmi              scr
  254 00000264 E59F56E8        ldr              r5,=ultim
  255 00000268 E0855002        add              r5,r5,r2
  256 0000026C E1540005        cmp              r4,r5
  257 00000270 5A00000E        bpl              scr
  258 00000274         
  259 00000274 E3A02000        mov              r2,#0
  260 00000278 E5C32000        strb             r2,[r3]     ;borro el coche
  261 0000027C         
  262 0000027C E5D37000        ldrb             r7,[r3]
  263 00000280 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  264 00000284 0A000003        beq              choc2
  265 00000288 E59F06F8        ldr              r0,=fin
  266 0000028C E3A01001        mov              r1,#1
  267 00000290 E5C01000        strb             r1,[r0]
  268 00000294 EA000108        b                sifin
  269 00000298         
  270 00000298 E3A02048 
                       choc2   mov              r2,#'H'
  271 0000029C E5C42000        strb             r2,[r4]     ;dibujo coche nuevo
                                                            
  272 000002A0         
  273 000002A0 E5814000        str              r4,[r1]     ;actualizo @coche
  274 000002A4         
  275 000002A4 E3A01000        mov              r1,#0
  276 000002A8 E59F06DC        ldr              r0,=diry    ;actualizo diry=0
  277 000002AC E5C01000        strb             r1,[r0]
  278 000002B0         
  279 000002B0         ;subo el score
  280 000002B0         
  281 000002B0 E59F06B8 
                       scr     ldr              r0,=cont
  282 000002B4 E5901000        ldr              r1,[r0]
  283 000002B8 E3510000        cmp              r1,#0       ;comprobamos que el
                                                             contador=0
  284 000002BC 1A00000F        bne              lvlup
  285 000002C0 E59F06C8        ldr              r0,=scrcont
  286 000002C4 E5D01000        ldrb             r1,[r0]
  287 000002C8         
  288 000002C8 E3510000        cmp              r1,#0
  289 000002CC 12411001        subne            r1,r1,#1
  290 000002D0 15C01000        strbne           r1,[r0]
  291 000002D4 1A000009        bne              lvlup
  292 000002D8 E59F16B4        ldr              r1,=scrmax
  293 000002DC E5911000        ldr              r1,[r1]
  294 000002E0 E5C01000        strb             r1,[r0]
  295 000002E4 E59F167C        ldr              r1,=score
  296 000002E8 E5D10000 
                       score1  ldrb             r0,[r1]
  297 000002EC E3500039        cmp              r0,#'9'
  298 000002F0 02811001        addeq            r1,r1,#1
  299 000002F4 0AFFFFFB        beq              score1
  300 000002F8 E2800001        add              r0,r0,#1
  301 000002FC E5C10000        strb             r0,[r1]
  302 00000300         



ARM Macro Assembler    Page 8 


  303 00000300         ;compruebo si ha subido de lvl
  304 00000300         
  305 00000300 E59F266C 
                       lvlup   ldr              r2,=lvlmax
  306 00000304 E5920000        ldr              r0,[r2]
  307 00000308 E59F1668        ldr              r1,=reloj
  308 0000030C E5911000        ldr              r1,[r1]
  309 00000310 E1510000        cmp              r1,r0
  310 00000314 4A000042        bmi              carrt
  311 00000318 E59F0638        ldr              r0,=lvl
  312 0000031C E5D01000        ldrb             r1,[r0]
  313 00000320 E2811001        add              r1,r1,#1
  314 00000324 E5C01000        strb             r1,[r0]
  315 00000328         
  316 00000328 E3510000        cmp              r1,#0
  317 0000032C 0A000035        beq              sigue1
  318 00000330 E3510005        cmp              r1,#5
  319 00000334 53A01004        movpl            r1,#4
  320 00000338 E2412001        sub              r2,r1,#1
  321 0000033C E59F0654        ldr              r0,=obnum
  322 00000340 E5C02000        strb             r2,[r0]
  323 00000344 E59F0650        ldr              r0,=obdir
  324 00000348 E59F2600        ldr              r2,=primer
  325 0000034C E5802000        str              r2,[r0]
  326 00000350 E2422020        sub              r2,r2,#32
  327 00000354 E59F0644        ldr              r0,=obspr
  328 00000358 E5802000        str              r2,[r0]
  329 0000035C E59F0640        ldr              r0,=obpos
  330 00000360 E3A02001        mov              r2,#1
  331 00000364 E5C02000        strb             r2,[r0]
  332 00000368         
  333 00000368 E3510003        cmp              r1,#3
  334 0000036C 1A00000D        bne              salta4
  335 00000370 E3E02006        mov              r2,#-7
  336 00000374 E59F0628        ldr              r0,=obpos
  337 00000378 E2800001        add              r0,r0,#1
  338 0000037C E5C02000        strb             r2,[r0]
  339 00000380 E59F25C8        ldr              r2,=primer
  340 00000384 E2422C01        sub              r2,r2,#256
  341 00000388 E59F060C        ldr              r0,=obdir
  342 0000038C E2800004        add              r0,r0,#4
  343 00000390 E5802000        str              r2,[r0]
  344 00000394 E59F25B4        ldr              r2,=primer
  345 00000398 E2422020        sub              r2,r2,#32
  346 0000039C E59F05FC        ldr              r0,=obspr
  347 000003A0 E2800004        add              r0,r0,#4
  348 000003A4 E5802000        str              r2,[r0]
  349 000003A8         
  350 000003A8 E3510004 
                       salta4  cmp              r1,#4
  351 000003AC 1A000015        bne              sigue1
  352 000003B0 E3E02003        mov              r2,#-4
  353 000003B4 E59F05E8        ldr              r0,=obpos
  354 000003B8 E2800001        add              r0,r0,#1
  355 000003BC E5C02000        strb             r2,[r0]
  356 000003C0 E3E02008        mov              r2,#-9
  357 000003C4 E2800001        add              r0,r0,#1
  358 000003C8 E5C02000        strb             r2,[r0]
  359 000003CC         



ARM Macro Assembler    Page 9 


  360 000003CC E59F257C        ldr              r2,=primer
  361 000003D0 E2422080        sub              r2,r2,#128
  362 000003D4 E59F05C0        ldr              r0,=obdir
  363 000003D8 E2800004        add              r0,r0,#4
  364 000003DC E5802000        str              r2,[r0]
  365 000003E0 E24220A0        sub              r2,r2,#160
  366 000003E4 E2800004        add              r0,r0,#4
  367 000003E8 E5802000        str              r2,[r0]
  368 000003EC         
  369 000003EC E59F255C        ldr              r2,=primer
  370 000003F0 E2422020        sub              r2,r2,#32
  371 000003F4 E59F05A4        ldr              r0,=obspr
  372 000003F8 E2800004        add              r0,r0,#4
  373 000003FC E5802000        str              r2,[r0]
  374 00000400 E2800004        add              r0,r0,#4
  375 00000404 E5802000        str              r2,[r0]
  376 00000408         
  377 00000408         
  378 00000408 E59F1598 
                       sigue1  ldr              r1,=max
  379 0000040C E5910000        ldr              r0,[r1]
  380 00000410 E3500001        cmp              r0,#1
  381 00000414 0AFFFF0E        beq              pini
  382 00000418 E1A000A0        mov              r0,r0,LSR #1
  383 0000041C E5810000        str              r0,[r1]
  384 00000420 EAFFFF0B        b                pini
  385 00000424         
  386 00000424         ;si toca mover carretera
  387 00000424 E59F0544 
                       carrt   ldr              r0,=cont
  388 00000428 E5901000        ldr              r1,[r0]
  389 0000042C E3510000        cmp              r1,#0       ;comprobamos que el
                                                             contador=0
  390 00000430 1A0000A1        bne              sifin
  391 00000434         
  392 00000434 E59F156C        ldr              r1,=max
  393 00000438 E5911000        ldr              r1,[r1]
  394 0000043C E5801000        str              r1,[r0]     ;reiniciamos el con
                                                            tador
  395 00000440         
  396 00000440 E24DD004 
                       numal   sub              sp, sp, #4
  397 00000444 EBFFFFFE        bl               rand        ;conseguimos el num
                                                            ero aleatorio
  398 00000448 E49D0004        pop              {r0}
  399 0000044C E1A00EA0        mov              r0,r0,LSR #29 ;le hacemos modul
                                                            o 3
  400 00000450         
  401 00000450 E3500000        cmp              r0,#0       ;si es 0 permanecer
                                                            a quieto
  402 00000454 1A000001        bne              uno
  403 00000458 E3A03000        mov              r3,#0
  404 0000045C EA000008        b                mueve
  405 00000460         
  406 00000460 E3500001 
                       uno     cmp              r0,#1       ;si es 1 se movera 
                                                            a la derecha
  407 00000464 1A000001        bne              dos
  408 00000468 E3A03001        mov              r3,#1



ARM Macro Assembler    Page 10 


  409 0000046C EA000004        b                mueve
  410 00000470         
  411 00000470 E3500002 
                       dos     cmp              r0,#2       ;si es 2 se movera 
                                                            igual que el ultimo
                                                            
  412 00000474 13E03000        movne            r3,#-1      ;sino es que es 3 y
                                                             se movera a la izq
                                                            uierda
  413 00000478 1A000001        bne              mueve
  414 0000047C E59F3528        ldr              r3,=sprm    ;guardamos en r3 el
                                                             siguiente mov
  415 00000480 E1D330D0        ldrsb            r3,[r3]
  416 00000484         
  417 00000484 E59F04C0 
                       mueve   ldr              r0,=road    ;r0=@road
  418 00000488 E59F1520        ldr              r1,=roadi
  419 0000048C E5D11000        ldrb             r1,[r1]     ;r1=indice del ulti
                                                            mo elemento
  420 00000490 E1A05001        mov              r5,r1       ;guardo en r5 el in
                                                            dice del suprimido
  421 00000494 E0800001        add              r0,r0,r1
  422 00000498 E1A02000        mov              r2,r0       ;r2=@elemento a sup
                                                            rimir
  423 0000049C E5D00000        ldrb             r0,[r0]
  424 000004A0 E59F450C        ldr              r4,=spr     ;guardamos en spr l
                                                            a pos del elemento 
                                                            suprimido
  425 000004A4 E5C40000        strb             r0,[r4]
  426 000004A8         
  427 000004A8 E351000F        cmp              r1,#15
  428 000004AC 059F4498        ldreq            r4,=road
  429 000004B0 05D44000        ldrbeq           r4,[r4]     ;guardamos en r4 la
                                                             nueva posicion
  430 000004B4 15D24001        ldrbne           r4,[r2,#1]
  431 000004B8 E0844003        add              r4,r4,r3
  432 000004BC         
  433 000004BC E3540000        cmp              r4,#0       ;comprobamos los li
                                                            mites izq y der
  434 000004C0 43A04000        movmi            r4,#0
  435 000004C4 E3540017        cmp              r4,#23
  436 000004C8 53A04017        movpl            r4,#23
  437 000004CC         
  438 000004CC E5C24000        strb             r4,[r2]     ;guardamos el nuevo
                                                             elemento
  439 000004D0         
  440 000004D0 E59F04D4        ldr              r0,=sprm
  441 000004D4 E5C03000        strb             r3,[r0]
  442 000004D8 E59F14D0        ldr              r1,=roadi
  443 000004DC E5D10000        ldrb             r0,[r1]     ;actualizo las var 
                                                            sprm y roadi
  444 000004E0 E3500000        cmp              r0,#0
  445 000004E4 03A0000F        moveq            r0,#15
  446 000004E8 12400001        subne            r0,r0,#1
  447 000004EC E5C10000        strb             r0,[r1]
  448 000004F0         ;ya he calculado todas las posiciones de la nueva
  449 000004F0         ;carretera y ahora queda dibujarla
  450 000004F0         
  451 000004F0 E59F0458        ldr              r0,=primer



ARM Macro Assembler    Page 11 


  452 000004F4 E59F1458        ldr              r1,=ultim
  453 000004F8 E3A02023        mov              r2,#'#'
  454 000004FC E3A06000        mov              r6,#0
  455 00000500 E59F4444        ldr              r4,=road
  456 00000504         
  457 00000504 E1510000 
                       dibuj   cmp              r1,r0
  458 00000508 0A000020        beq              ultimo
  459 0000050C         
  460 0000050C E355000F        cmp              r5,#15      ;borro el limite iz
                                                            q
  461 00000510 53A05000        movpl            r5,#0
  462 00000514 12855001        addne            r5,r5,#1
  463 00000518 E7D43005        ldrb             r3,[r4,r5]
  464 0000051C E7C06003        strb             r6,[r0,r3]
  465 00000520 E2833008        add              r3,r3,#8    ;borro el limite de
                                                            recho
  466 00000524 E7C06003        strb             r6,[r0,r3]
  467 00000528         
  468 00000528 E3550000        cmp              r5,#0       ;compruebo siempre 
                                                            si el indice ha
  469 0000052C 03A0500F        moveq            r5,#15      ;llegado a 0 o a 15
                                                             para hacer que rot
                                                            e
  470 00000530 12455001        subne            r5,r5,#1
  471 00000534         
  472 00000534 E7D43005        ldrb             r3,[r4,r5]
  473 00000538         
  474 00000538 E7D07003        ldrb             r7,[r0,r3]
  475 0000053C E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  476 00000540 0A000003        beq              choc5
  477 00000544 E59F043C        ldr              r0,=fin
  478 00000548 E3A01001        mov              r1,#1
  479 0000054C E5C01000        strb             r1,[r0]
  480 00000550 EA000059        b                sifin
  481 00000554         
  482 00000554 E7C02003 
                       choc5   strb             r2,[r0,r3]  ;escribo el nuevo l
                                                            imite izq
  483 00000558 E2833008        add              r3,r3,#8
  484 0000055C         
  485 0000055C E7D07003        ldrb             r7,[r0,r3]
  486 00000560 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  487 00000564 0A000003        beq              choc6
  488 00000568 E59F0418        ldr              r0,=fin
  489 0000056C E3A01001        mov              r1,#1
  490 00000570 E5C01000        strb             r1,[r0]
  491 00000574 EA000050        b                sifin
  492 00000578         
  493 00000578 E7C02003 
                       choc6   strb             r2,[r0,r3]  ;escribo el nuevo l
                                                            imite der
  494 0000057C         
  495 0000057C E355000F        cmp              r5,#15
  496 00000580 53A05000        movpl            r5,#0
  497 00000584 12855001        addne            r5,r5,#1
  498 00000588 E2800020        add              r0,r0,#32



ARM Macro Assembler    Page 12 


  499 0000058C EAFFFFDC        b                dibuj
  500 00000590         
  501 00000590         ;Borro y escribo el ultimo elemento de la carretera
  502 00000590         
  503 00000590 E59F141C 
                       ultimo  ldr              r1,=spr     ;esta vez cojo el e
                                                            lemento de la var s
                                                            pr
  504 00000594 E5D11000        ldrb             r1,[r1]
  505 00000598 E7C06001        strb             r6,[r0,r1]
  506 0000059C         
  507 0000059C E2811008        add              r1,r1,#8    ;lo borro
  508 000005A0 E7C06001        strb             r6,[r0,r1]
  509 000005A4         
  510 000005A4 E7D43005        ldrb             r3,[r4,r5]
  511 000005A8         
  512 000005A8 E7D07003        ldrb             r7,[r0,r3]
  513 000005AC E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  514 000005B0 0A000003        beq              choc3
  515 000005B4 E59F03CC        ldr              r0,=fin
  516 000005B8 E3A01001        mov              r1,#1
  517 000005BC E5C01000        strb             r1,[r0]
  518 000005C0 EA00003D        b                sifin
  519 000005C4         
  520 000005C4 E7C02003 
                       choc3   strb             r2,[r0,r3]  ;y lo escribo
  521 000005C8 E2833008        add              r3,r3,#8
  522 000005CC         
  523 000005CC E7D07003        ldrb             r7,[r0,r3]
  524 000005D0 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  525 000005D4 0A000003        beq              choc4
  526 000005D8 E59F03A8        ldr              r0,=fin
  527 000005DC E3A01001        mov              r1,#1
  528 000005E0 E5C01000        strb             r1,[r0]
  529 000005E4 EA000034        b                sifin
  530 000005E8         
  531 000005E8 E7C02003 
                       choc4   strb             r2,[r0,r3]
  532 000005EC         
  533 000005EC         
  534 000005EC         ;objeto
  535 000005EC         
  536 000005EC E59F03A4        ldr              r0,=obnum
  537 000005F0 E5D00000        ldrb             r0,[r0]
  538 000005F4 E2400001        sub              r0,r0,#1
  539 000005F8 E1A01000        mov              r1,r0
  540 000005FC E3A03000        mov              r3,#0
  541 00000600         
  542 00000600 E3510000 
                       borraob cmp              r1,#0
  543 00000604 41A01000        movmi            r1,r0
  544 00000608 4A000004        bmi              escrob      ;borra los objetos
  545 0000060C E59F238C        ldr              r2,=obspr
  546 00000610 E7924101        ldr              r4,[r2,r1,LSL #2]
  547 00000614 E5C43000        strb             r3,[r4]
  548 00000618 E2411001        sub              r1,r1,#1
  549 0000061C EAFFFFF7        b                borraob



ARM Macro Assembler    Page 13 


  550 00000620         
  551 00000620         
  552 00000620 E3510000 
                       escrob  cmp              r1,#0
  553 00000624 4A000024        bmi              sifin
  554 00000628 E59F2374        ldr              r2,=obpos
  555 0000062C E59F337C        ldr              r3,=roadi
  556 00000630 E5D33000        ldrb             r3,[r3]
  557 00000634 E7D24001        ldrb             r4,[r2,r1]
  558 00000638 E2847001        add              r7,r4,#1
  559 0000063C E3570010        cmp              r7,#16
  560 00000640 03A07000        moveq            r7,#0
  561 00000644 E7C27001        strb             r7,[r2,r1]
  562 00000648         
  563 00000648 E0833004        add              r3,r3,r4
  564 0000064C E3530010        cmp              r3,#16
  565 00000650 52433010        subpl            r3,r3,#16
  566 00000654 E59F42F0        ldr              r4,=road
  567 00000658 E7D43003        ldrb             r3,[r4,r3]
  568 0000065C E2833004        add              r3,r3,#4
  569 00000660 E59F7334        ldr              r7,=obdir
  570 00000664 E7977101        ldr              r7,[r7,r1,LSL #2]
  571 00000668 E7D75003        ldrb             r5,[r7,r3]
  572 0000066C         
  573 0000066C E3550000        cmp              r5,#0
  574 00000670 0A000003        beq              choc7
  575 00000674 E59F030C        ldr              r0,=fin
  576 00000678 E3A01001        mov              r1,#1
  577 0000067C E5C01000        strb             r1,[r0]
  578 00000680 EA00000D        b                sifin
  579 00000684         
  580 00000684 E3A04023 
                       choc7   mov              r4,#'#'
  581 00000688 E7C74003        strb             r4,[r7,r3]
  582 0000068C E59F4308        ldr              r4,=obdir
  583 00000690 E2872020        add              r2,r7,#32
  584 00000694 E59F62B8        ldr              r6,=ultim
  585 00000698 E2866020        add              r6,r6,#32
  586 0000069C E1520006        cmp              r2,r6
  587 000006A0 559F22A8        ldrpl            r2,=primer
  588 000006A4 E7842101        str              r2,[r4,r1,LSL #2]
  589 000006A8 E59F42F0        ldr              r4,=obspr
  590 000006AC E0877003        add              r7,r7,r3
  591 000006B0 E7847101        str              r7,[r4,r1,LSL #2]
  592 000006B4 E2411001        sub              r1,r1,#1
  593 000006B8 EAFFFFD8        b                escrob
  594 000006BC         
  595 000006BC         
  596 000006BC         
  597 000006BC         
  598 000006BC         ;si fin=0 salto a bucle
  599 000006BC E59F02C4 
                       sifin   ldr              r0,=fin
  600 000006C0 E5D00000        ldrb             r0,[r0]
  601 000006C4 E3500000        cmp              r0,#0
  602 000006C8 0AFFFEC2        beq              bucle
  603 000006CC         
  604 000006CC E3A00020        mov              r0,#' '
  605 000006D0 E59F1278        ldr              r1,=primer



ARM Macro Assembler    Page 14 


  606 000006D4 E59F2278        ldr              r2,=ultim
  607 000006D8 E2822020        add              r2,r2,#32
  608 000006DC E1520001 
                       borra   cmp              r2,r1
  609 000006E0 0A000002        beq              GM
  610 000006E4 E5C10000        strb             r0,[r1]
  611 000006E8 E2811001        add              r1,r1,#1
  612 000006EC EAFFFFFA        b                borra
  613 000006F0         
  614 000006F0 E59F0264 
                       GM      ldr              r0,=texto   ;GAME OVER
  615 000006F4 E59F12BC        ldr              r1,=mensa
  616 000006F8 E5912000        ldr              r2,[r1]
  617 000006FC E5802000        str              r2,[r0]
  618 00000700 E2811004        add              r1,r1,#4
  619 00000704 E2800008        add              r0,r0,#8
  620 00000708 E5912000        ldr              r2,[r1]
  621 0000070C E5802000        str              r2,[r0]
  622 00000710         
  623 00000710 E59F2244        ldr              r2,=texto
  624 00000714 E2822020        add              r2,r2,#32
  625 00000718 E59F0244        ldr              r0,=scrtxt
  626 0000071C E5D01000        ldrb             r1,[r0]
  627 00000720         
  628 00000720 E3510020 
                       write   cmp              r1,#' '
  629 00000724 0A000004        beq              apunta
  630 00000728 E5C21000        strb             r1,[r2]
  631 0000072C E2822001        add              r2,r2,#1
  632 00000730 E2800001        add              r0,r0,#1
  633 00000734 E5D01000        ldrb             r1,[r0]
  634 00000738 EAFFFFF8        b                write
  635 0000073C         
  636 0000073C E59F0224 
                       apunta  ldr              r0,=score   ;apunto el score
  637 00000740 E2800003        add              r0,r0,#3
  638 00000744 E5D01000        ldrb             r1,[r0]
  639 00000748 E3A03004        mov              r3,#4
  640 0000074C         
  641 0000074C E3530000 
                       aqui4   cmp              r3,#0
  642 00000750 0A000005        beq              lvl2
  643 00000754 E5C21000        strb             r1,[r2]
  644 00000758 E2400001        sub              r0,r0,#1
  645 0000075C E5D01000        ldrb             r1,[r0]
  646 00000760 E2822001        add              r2,r2,#1
  647 00000764 E2433001        sub              r3,r3,#1
  648 00000768 EAFFFFF7        b                aqui4
  649 0000076C         
  650 0000076C E59F21E8 
                       lvl2    ldr              r2,=texto
  651 00000770 E2822040        add              r2,r2,#64
  652 00000774 E59F01E4        ldr              r0,=lvltxt
  653 00000778 E5900000        ldr              r0,[r0]
  654 0000077C E5820000        str              r0,[r2]
  655 00000780 E2822004        add              r2,r2,#4
  656 00000784 E59F01CC        ldr              r0,=lvl
  657 00000788 E5D00000        ldrb             r0,[r0]
  658 0000078C E2800030        add              r0,r0,#'0'



ARM Macro Assembler    Page 15 


  659 00000790 E5C20000        strb             r0,[r2]
  660 00000794         
  661 00000794         ;desactivar IRQ4,IRQ7
  662 00000794 E59F0220        LDR              r0, =VICIntEnClr
  663 00000798 E3A01090        mov              r1, #2_10010000
  664 0000079C E5801000        str              r1, [r0]
  665 000007A0         
  666 000007A0         ;desactivar RSI_reloj
  667 000007A0         
  668 000007A0 E59F018C        LDR              r0, =VICVectAddr0
  669 000007A4 E59F118C        LDR              r1,=reloj_so
  670 000007A8 E5911000        ldr              r1, [r1]
  671 000007AC E3A02004        mov              r2, #4
  672 000007B0 E7801102        str              r1, [r0,r2,LSL #2]
  673 000007B4         
  674 000007B4         ;desactivar RSI_boton
  675 000007B4         
  676 000007B4 E59F0178        LDR              r0, =VICVectAddr0
  677 000007B8 E59F1180        LDR              r1,=tecl_so
  678 000007BC E5911000        ldr              r1, [r1]
  679 000007C0 E3A02007        mov              r2, #7
  680 000007C4 E7801102        str              r1, [r0,r2,LSL #2]
  681 000007C8         
  682 000007C8 EAFFFFFE 
                       bfin    b                bfin
  683 000007CC         
  684 000007CC         
  685 000007CC         
  686 000007CC         
  687 000007CC         RSI_reloj                            ;Rutina de servicio
                                                             a la interrupcion 
                                                            IRQ4 (timer 0)
  688 000007CC         ;Cada 0,01 s. llega una peticion de interrupcion
  689 000007CC         
  690 000007CC E24EE004        sub              lr,lr,#4
  691 000007D0 E52DE004        PUSH             {lr}
  692 000007D4 E14FE000        mrs              r14,spsr
  693 000007D8 E52DE004        PUSH             {r14}
  694 000007DC E321F052        msr              cpsr_c,#2_01010010
  695 000007E0         
  696 000007E0 E92D0003        PUSH{r0-r1}
  697 000007E4         
  698 000007E4 E59F01D4        LDR              r0,=TO_IR
  699 000007E8 E3A01001        mov              r1,#1
  700 000007EC E5801000        str              r1,[r0]
  701 000007F0         
  702 000007F0         
  703 000007F0 E59F0180        ldr              r0,=reloj
  704 000007F4 E5901000        ldr              r1,[r0]
  705 000007F8 E2811001        add              r1,r1,#1
  706 000007FC E5801000        str              r1,[r0]
  707 00000800 E59F0168        LDR              r0,=cont
  708 00000804 E5901000        ldr              r1, [r0]
  709 00000808 E3510000        cmp              r1, #0
  710 0000080C 0A000001        beq              finreloj
  711 00000810 E2411001        sub              r1, r1, #1
  712 00000814 E5801000        str              r1, [r0]
  713 00000818         
  714 00000818 E8BD0003 



ARM Macro Assembler    Page 16 


                       finreloj
                               POP{r0-r1}
  715 0000081C E321F0D2        msr              cpsr_c, #2_11010010
  716 00000820 E49DE004        POP{r14}
  717 00000824 E16FF00E        msr              spsr_fsxc,r14
  718 00000828 E59FE194        LDR              r14,=VICVectAddr
  719 0000082C E58EE000        str              r14,[r14]
  720 00000830 E8FD8000        POP{pc}^
  721 00000834         
  722 00000834         RSI_teclado                          ;Rutina de servicio
                                                             a la interrupcion 
                                                            IRQ7 (teclado)
  723 00000834         ;al pulsar cada tecla llega peticion de interrupcion IRQ
                       7
  724 00000834         
  725 00000834 E24EE004        sub              lr,lr,#4
  726 00000838 E52DE004        PUSH             {lr}
  727 0000083C E14FE000        mrs              r14,spsr
  728 00000840 E52DE004        PUSH             {r14}
  729 00000844 E321F052        msr              cpsr_c,#2_01010010
  730 00000848         
  731 00000848 E92D0003        PUSH{r0-r1}
  732 0000084C         
  733 0000084C E59F1174        LDR              r1,=TEC_DAT
  734 00000850 E5D10000        ldrb             r0,[r1]
  735 00000854 E350002B 
                       mas     cmp              r0,#43
  736 00000858 1A000006        bne              menos
  737 0000085C E59F1144        ldr              r1,=max
  738 00000860 E5910000        ldr              r0,[r1]
  739 00000864 E3500001        cmp              r0,#1
  740 00000868 0A00002A        beq              fintec
  741 0000086C E1A000A0        mov              r0,r0,LSR #1
  742 00000870 E5810000        str              r0,[r1]
  743 00000874 EA000027        b                fintec
  744 00000878         
  745 00000878 E350002D 
                       menos   cmp              r0,#45
  746 0000087C 1A000006        bne              mayus
  747 00000880 E59F1120        ldr              r1,=max
  748 00000884 E5910000        ldr              r0,[r1]
  749 00000888 E3500080        cmp              r0,#128
  750 0000088C 0A000021        beq              fintec
  751 00000890 E1A00080        mov              r0,r0,LSL #1
  752 00000894 E5810000        str              r0,[r1]
  753 00000898 EA00001E        b                fintec
  754 0000089C         
  755 0000089C E3C00020 
                       mayus   bic              r0,r0,#2_100000 ;transformo a m
                                                            ayusculas
  756 000008A0         
  757 000008A0         
  758 000008A0 E350004A 
                       j       cmp              r0,#74
  759 000008A4 1A000003        bne              l
  760 000008A8 E59F00D4        ldr              r0,=dirx
  761 000008AC E3E01000        mov              r1,#-1
  762 000008B0 E5C01000        strb             r1,[r0]
  763 000008B4 EA000017        b                fintec



ARM Macro Assembler    Page 17 


  764 000008B8         
  765 000008B8 E350004C 
                       l       cmp              r0,#76
  766 000008BC 1A000003        bne              i
  767 000008C0 E59F00BC        ldr              r0,=dirx
  768 000008C4 E3A01001        mov              r1,#1
  769 000008C8 E5C01000        strb             r1,[r0]
  770 000008CC EA000011        b                fintec
  771 000008D0         
  772 000008D0 E3500049 
                       i       cmp              r0,#73
  773 000008D4 1A000003        bne              k
  774 000008D8 E59F00AC        ldr              r0,=diry
  775 000008DC E3A01001        mov              r1,#1
  776 000008E0 E5C01000        strb             r1,[r0]
  777 000008E4 EA00000B        b                fintec
  778 000008E8         
  779 000008E8 E350004B 
                       k       cmp              r0,#75
  780 000008EC 1A000003        bne              q
  781 000008F0 E59F0094        ldr              r0,=diry
  782 000008F4 E3E01000        mov              r1,#-1
  783 000008F8 E5C01000        strb             r1,[r0]
  784 000008FC EA000005        b                fintec
  785 00000900         
  786 00000900 E3500051 
                       q       cmp              r0,#81
  787 00000904 1A000003        bne              fintec
  788 00000908 E59F1078        ldr              r1,=fin
  789 0000090C E3A00001        mov              r0,#1
  790 00000910 E5C10000        strb             r0,[r1]
  791 00000914 EAFFFFFF        b                fintec
  792 00000918         
  793 00000918 E8BD0003 
                       fintec  POP{r0-r1}
  794 0000091C         
  795 0000091C E321F0D2        msr              cpsr_c, #2_11010010
  796 00000920 E49DE004        POP{r14}
  797 00000924 E16FF00E        msr              spsr_fsxc,r14
  798 00000928 E59FE094        LDR              r14,=VICVectAddr
  799 0000092C E58EE000        str              r14,[r14]
  800 00000930 E8FD8000        POP{pc}^
  801 00000934         
  802 00000934                 END
              FFFFF100 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFF010 
              00000000 
              40007E00 
              40007FE0 
              00000000 
              40007EE8 
              00000000 
              00000000 
              00000000 
              00000000 



ARM Macro Assembler    Page 18 


              00000000 
              00000000 
              00000000 
              00000000 
              40007FEC 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFF014 
              E0004000 
              FFFFF030 
              E0010000 
Command Line: --debug --xref --apcs=interwork --depend=prac5.d -oprac5.o -IE:\P
rogramas\Keil\ARM\INC -IE:\Programas\Keil\ARM\INC\Philips --predefine="__EVAL S
ETA 1" --list=prac5.lst prac5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

coche 00000024

Symbol: coche
   Definitions
      At line 17 in file prac5.s
   Uses
      At line 205 in file prac5.s
      At line 217 in file prac5.s
      At line 244 in file prac5.s

cont 00000008

Symbol: cont
   Definitions
      At line 5 in file prac5.s
   Uses
      At line 164 in file prac5.s
      At line 281 in file prac5.s
      At line 387 in file prac5.s
      At line 707 in file prac5.s

datos 00000000

Symbol: datos
   Definitions
      At line 1 in file prac5.s
   Uses
      None
Comment: datos unused
dirx 0000000C

Symbol: dirx
   Definitions
      At line 6 in file prac5.s
   Uses
      At line 213 in file prac5.s
      At line 237 in file prac5.s
      At line 760 in file prac5.s
      At line 767 in file prac5.s

diry 0000000D

Symbol: diry
   Definitions
      At line 7 in file prac5.s
   Uses
      At line 240 in file prac5.s
      At line 276 in file prac5.s
      At line 774 in file prac5.s
      At line 781 in file prac5.s

fin 0000000E

Symbol: fin
   Definitions
      At line 8 in file prac5.s
   Uses
      At line 226 in file prac5.s
      At line 265 in file prac5.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 477 in file prac5.s
      At line 488 in file prac5.s
      At line 515 in file prac5.s
      At line 526 in file prac5.s
      At line 575 in file prac5.s
      At line 599 in file prac5.s
      At line 788 in file prac5.s

loading 00000031

Symbol: loading
   Definitions
      At line 20 in file prac5.s
   Uses
      At line 151 in file prac5.s
Comment: loading used once
lvl 0000004D

Symbol: lvl
   Definitions
      At line 26 in file prac5.s
   Uses
      At line 114 in file prac5.s
      At line 311 in file prac5.s
      At line 656 in file prac5.s

lvlmax 00000050

Symbol: lvlmax
   Definitions
      At line 27 in file prac5.s
   Uses
      At line 175 in file prac5.s
      At line 305 in file prac5.s

lvltxt 00000049

Symbol: lvltxt
   Definitions
      At line 25 in file prac5.s
   Uses
      At line 118 in file prac5.s
      At line 652 in file prac5.s

max 00000004

Symbol: max
   Definitions
      At line 4 in file prac5.s
   Uses
      At line 378 in file prac5.s
      At line 392 in file prac5.s
      At line 737 in file prac5.s
      At line 747 in file prac5.s

mensa 00000028

Symbol: mensa
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 18 in file prac5.s
   Uses
      At line 615 in file prac5.s
Comment: mensa used once
obdir 00000058

Symbol: obdir
   Definitions
      At line 31 in file prac5.s
   Uses
      At line 323 in file prac5.s
      At line 341 in file prac5.s
      At line 362 in file prac5.s
      At line 569 in file prac5.s
      At line 582 in file prac5.s

obnum 00000054

Symbol: obnum
   Definitions
      At line 29 in file prac5.s
   Uses
      At line 321 in file prac5.s
      At line 536 in file prac5.s

obpos 00000055

Symbol: obpos
   Definitions
      At line 30 in file prac5.s
   Uses
      At line 329 in file prac5.s
      At line 336 in file prac5.s
      At line 353 in file prac5.s
      At line 554 in file prac5.s

obspr 00000064

Symbol: obspr
   Definitions
      At line 32 in file prac5.s
   Uses
      At line 327 in file prac5.s
      At line 346 in file prac5.s
      At line 371 in file prac5.s
      At line 545 in file prac5.s
      At line 589 in file prac5.s

reloj 00000000

Symbol: reloj
   Definitions
      At line 3 in file prac5.s
   Uses
      At line 176 in file prac5.s
      At line 307 in file prac5.s
      At line 703 in file prac5.s

reloj_so 00000074



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: reloj_so
   Definitions
      At line 48 in file prac5.s
   Uses
      At line 62 in file prac5.s
      At line 669 in file prac5.s

road 0000000F

Symbol: road
   Definitions
      At line 10 in file prac5.s
   Uses
      At line 93 in file prac5.s
      At line 417 in file prac5.s
      At line 428 in file prac5.s
      At line 455 in file prac5.s
      At line 566 in file prac5.s

roadi 0000001F

Symbol: roadi
   Definitions
      At line 11 in file prac5.s
   Uses
      At line 418 in file prac5.s
      At line 442 in file prac5.s
      At line 555 in file prac5.s

score 00000043

Symbol: score
   Definitions
      At line 22 in file prac5.s
   Uses
      At line 136 in file prac5.s
      At line 295 in file prac5.s
      At line 636 in file prac5.s

scrcont 00000048

Symbol: scrcont
   Definitions
      At line 24 in file prac5.s
   Uses
      At line 285 in file prac5.s
Comment: scrcont used once
scrmax 00000047

Symbol: scrmax
   Definitions
      At line 23 in file prac5.s
   Uses
      At line 292 in file prac5.s
Comment: scrmax used once
scrtxt 0000003C

Symbol: scrtxt



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 21 in file prac5.s
   Uses
      At line 125 in file prac5.s
      At line 625 in file prac5.s

spr 00000020

Symbol: spr
   Definitions
      At line 14 in file prac5.s
   Uses
      At line 424 in file prac5.s
      At line 503 in file prac5.s

sprm 00000021

Symbol: sprm
   Definitions
      At line 15 in file prac5.s
   Uses
      At line 414 in file prac5.s
      At line 440 in file prac5.s

tecl_so 00000078

Symbol: tecl_so
   Definitions
      At line 49 in file prac5.s
   Uses
      At line 72 in file prac5.s
      At line 677 in file prac5.s

vac 00000070

Symbol: vac
   Definitions
      At line 47 in file prac5.s
   Uses
      None
Comment: vac unused
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

GM 000006F0

Symbol: GM
   Definitions
      At line 614 in file prac5.s
   Uses
      At line 609 in file prac5.s
Comment: GM used once
RSI_reloj 000007CC

Symbol: RSI_reloj
   Definitions
      At line 687 in file prac5.s
   Uses
      At line 67 in file prac5.s
Comment: RSI_reloj used once
RSI_teclado 00000834

Symbol: RSI_teclado
   Definitions
      At line 722 in file prac5.s
   Uses
      At line 77 in file prac5.s
Comment: RSI_teclado used once
apunta 0000073C

Symbol: apunta
   Definitions
      At line 636 in file prac5.s
   Uses
      At line 629 in file prac5.s
Comment: apunta used once
apunta1 000000E0

Symbol: apunta1
   Definitions
      At line 136 in file prac5.s
   Uses
      At line 129 in file prac5.s
Comment: apunta1 used once
aqui 00000118

Symbol: aqui
   Definitions
      At line 154 in file prac5.s
   Uses
      At line 160 in file prac5.s
Comment: aqui used once
aqui4 0000074C

Symbol: aqui4
   Definitions
      At line 641 in file prac5.s
   Uses
      At line 648 in file prac5.s
Comment: aqui4 used once
aqui5 000000F0

Symbol: aqui5



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 141 in file prac5.s
   Uses
      At line 148 in file prac5.s
Comment: aqui5 used once
bfin 000007C8

Symbol: bfin
   Definitions
      At line 682 in file prac5.s
   Uses
      At line 682 in file prac5.s
Comment: bfin used once
borra 000006DC

Symbol: borra
   Definitions
      At line 608 in file prac5.s
   Uses
      At line 612 in file prac5.s
Comment: borra used once
borra1 00000080

Symbol: borra1
   Definitions
      At line 107 in file prac5.s
   Uses
      At line 111 in file prac5.s
Comment: borra1 used once
borra2 00000188

Symbol: borra2
   Definitions
      At line 187 in file prac5.s
   Uses
      At line 191 in file prac5.s
Comment: borra2 used once
borraob 00000600

Symbol: borraob
   Definitions
      At line 542 in file prac5.s
   Uses
      At line 549 in file prac5.s
Comment: borraob used once
bucle 000001D8

Symbol: bucle
   Definitions
      At line 213 in file prac5.s
   Uses
      At line 602 in file prac5.s
Comment: bucle used once
carrt 00000424

Symbol: carrt
   Definitions
      At line 387 in file prac5.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 310 in file prac5.s
Comment: carrt used once
choc1 00000218

Symbol: choc1
   Definitions
      At line 231 in file prac5.s
   Uses
      At line 225 in file prac5.s
Comment: choc1 used once
choc2 00000298

Symbol: choc2
   Definitions
      At line 270 in file prac5.s
   Uses
      At line 264 in file prac5.s
Comment: choc2 used once
choc3 000005C4

Symbol: choc3
   Definitions
      At line 520 in file prac5.s
   Uses
      At line 514 in file prac5.s
Comment: choc3 used once
choc4 000005E8

Symbol: choc4
   Definitions
      At line 531 in file prac5.s
   Uses
      At line 525 in file prac5.s
Comment: choc4 used once
choc5 00000554

Symbol: choc5
   Definitions
      At line 482 in file prac5.s
   Uses
      At line 476 in file prac5.s
Comment: choc5 used once
choc6 00000578

Symbol: choc6
   Definitions
      At line 493 in file prac5.s
   Uses
      At line 487 in file prac5.s
Comment: choc6 used once
choc7 00000684

Symbol: choc7
   Definitions
      At line 580 in file prac5.s
   Uses
      At line 574 in file prac5.s
Comment: choc7 used once
codigo 00000000



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: codigo
   Definitions
      At line 52 in file prac5.s
   Uses
      None
Comment: codigo unused
dcarre 000001A8

Symbol: dcarre
   Definitions
      At line 198 in file prac5.s
   Uses
      At line 203 in file prac5.s
Comment: dcarre used once
dcoche 000001C0

Symbol: dcoche
   Definitions
      At line 205 in file prac5.s
   Uses
      At line 199 in file prac5.s
Comment: dcoche used once
dibuj 00000504

Symbol: dibuj
   Definitions
      At line 457 in file prac5.s
   Uses
      At line 499 in file prac5.s
Comment: dibuj used once
dos 00000470

Symbol: dos
   Definitions
      At line 411 in file prac5.s
   Uses
      At line 407 in file prac5.s
Comment: dos used once
ejey 00000230

Symbol: ejey
   Definitions
      At line 240 in file prac5.s
   Uses
      At line 216 in file prac5.s
Comment: ejey used once
escrib 00000178

Symbol: escrib
   Definitions
      At line 183 in file prac5.s
   Uses
      None
Comment: escrib unused
escrob 00000620

Symbol: escrob
   Definitions



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 552 in file prac5.s
   Uses
      At line 544 in file prac5.s
      At line 593 in file prac5.s

finreloj 00000818

Symbol: finreloj
   Definitions
      At line 714 in file prac5.s
   Uses
      At line 710 in file prac5.s
Comment: finreloj used once
fintec 00000918

Symbol: fintec
   Definitions
      At line 793 in file prac5.s
   Uses
      At line 740 in file prac5.s
      At line 743 in file prac5.s
      At line 750 in file prac5.s
      At line 753 in file prac5.s
      At line 763 in file prac5.s
      At line 770 in file prac5.s
      At line 777 in file prac5.s
      At line 784 in file prac5.s
      At line 787 in file prac5.s
      At line 791 in file prac5.s

i 000008D0

Symbol: i
   Definitions
      At line 772 in file prac5.s
   Uses
      At line 766 in file prac5.s
Comment: i used once
inicio 00000000

Symbol: inicio
   Definitions
      At line 56 in file prac5.s
   Uses
      At line 53 in file prac5.s
Comment: inicio used once
iniroad 00000060

Symbol: iniroad
   Definitions
      At line 96 in file prac5.s
   Uses
      At line 99 in file prac5.s
Comment: iniroad used once
j 000008A0

Symbol: j
   Definitions
      At line 758 in file prac5.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: j unused
k 000008E8

Symbol: k
   Definitions
      At line 779 in file prac5.s
   Uses
      At line 773 in file prac5.s
Comment: k used once
l 000008B8

Symbol: l
   Definitions
      At line 765 in file prac5.s
   Uses
      At line 759 in file prac5.s
Comment: l used once
load 0000013C

Symbol: load
   Definitions
      At line 165 in file prac5.s
   Uses
      At line 167 in file prac5.s
      At line 173 in file prac5.s

load1 00000134

Symbol: load1
   Definitions
      At line 163 in file prac5.s
   Uses
      At line 156 in file prac5.s
Comment: load1 used once
load2 00000110

Symbol: load2
   Definitions
      At line 151 in file prac5.s
   Uses
      At line 142 in file prac5.s
Comment: load2 used once
lvl1 00000094

Symbol: lvl1
   Definitions
      At line 114 in file prac5.s
   Uses
      At line 108 in file prac5.s
Comment: lvl1 used once
lvl2 0000076C

Symbol: lvl2
   Definitions
      At line 650 in file prac5.s
   Uses
      At line 642 in file prac5.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

Comment: lvl2 used once
lvlt 00000160

Symbol: lvlt
   Definitions
      At line 175 in file prac5.s
   Uses
      At line 172 in file prac5.s
Comment: lvlt used once
lvlup 00000300

Symbol: lvlup
   Definitions
      At line 305 in file prac5.s
   Uses
      At line 284 in file prac5.s
      At line 291 in file prac5.s

mas 00000854

Symbol: mas
   Definitions
      At line 735 in file prac5.s
   Uses
      None
Comment: mas unused
mayus 0000089C

Symbol: mayus
   Definitions
      At line 755 in file prac5.s
   Uses
      At line 746 in file prac5.s
Comment: mayus used once
menos 00000878

Symbol: menos
   Definitions
      At line 745 in file prac5.s
   Uses
      At line 736 in file prac5.s
Comment: menos used once
mueve 00000484

Symbol: mueve
   Definitions
      At line 417 in file prac5.s
   Uses
      At line 404 in file prac5.s
      At line 409 in file prac5.s
      At line 413 in file prac5.s

numal 00000440

Symbol: numal
   Definitions
      At line 396 in file prac5.s
   Uses
      None



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

Comment: numal unused
pini 00000054

Symbol: pini
   Definitions
      At line 93 in file prac5.s
   Uses
      At line 381 in file prac5.s
      At line 384 in file prac5.s

q 00000900

Symbol: q
   Definitions
      At line 786 in file prac5.s
   Uses
      At line 780 in file prac5.s
Comment: q used once
salta4 000003A8

Symbol: salta4
   Definitions
      At line 350 in file prac5.s
   Uses
      At line 334 in file prac5.s
Comment: salta4 used once
score1 000002E8

Symbol: score1
   Definitions
      At line 296 in file prac5.s
   Uses
      At line 299 in file prac5.s
Comment: score1 used once
scr 000002B0

Symbol: scr
   Definitions
      At line 281 in file prac5.s
   Uses
      At line 243 in file prac5.s
      At line 253 in file prac5.s
      At line 257 in file prac5.s

sifin 000006BC

Symbol: sifin
   Definitions
      At line 599 in file prac5.s
   Uses
      At line 229 in file prac5.s
      At line 268 in file prac5.s
      At line 390 in file prac5.s
      At line 480 in file prac5.s
      At line 491 in file prac5.s
      At line 518 in file prac5.s
      At line 529 in file prac5.s
      At line 553 in file prac5.s
      At line 578 in file prac5.s



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Relocatable symbols


sigue 0000019C

Symbol: sigue
   Definitions
      At line 195 in file prac5.s
   Uses
      At line 188 in file prac5.s
Comment: sigue used once
sigue1 00000408

Symbol: sigue1
   Definitions
      At line 378 in file prac5.s
   Uses
      At line 317 in file prac5.s
      At line 351 in file prac5.s

ultimo 00000590

Symbol: ultimo
   Definitions
      At line 503 in file prac5.s
   Uses
      At line 458 in file prac5.s
Comment: ultimo used once
uno 00000460

Symbol: uno
   Definitions
      At line 406 in file prac5.s
   Uses
      At line 402 in file prac5.s
Comment: uno used once
write 00000720

Symbol: write
   Definitions
      At line 628 in file prac5.s
   Uses
      At line 634 in file prac5.s
Comment: write used once
write1 000000C4

Symbol: write1
   Definitions
      At line 128 in file prac5.s
   Uses
      At line 134 in file prac5.s
Comment: write1 used once
62 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IOCLR E002800C

Symbol: IOCLR
   Definitions
      At line 45 in file prac5.s
   Uses
      None
Comment: IOCLR unused
IOSET E0028004

Symbol: IOSET
   Definitions
      At line 44 in file prac5.s
   Uses
      None
Comment: IOSET unused
TEC_DAT E0010000

Symbol: TEC_DAT
   Definitions
      At line 42 in file prac5.s
   Uses
      At line 733 in file prac5.s
Comment: TEC_DAT used once
TO_IR E0004000

Symbol: TO_IR
   Definitions
      At line 46 in file prac5.s
   Uses
      At line 698 in file prac5.s
Comment: TO_IR used once
VICIntEnClr FFFFF014

Symbol: VICIntEnClr
   Definitions
      At line 36 in file prac5.s
   Uses
      At line 662 in file prac5.s
Comment: VICIntEnClr used once
VICIntEnable FFFFF010

Symbol: VICIntEnable
   Definitions
      At line 35 in file prac5.s
   Uses
      At line 81 in file prac5.s
Comment: VICIntEnable used once
VICSoftInt FFFFF018

Symbol: VICSoftInt
   Definitions
      At line 37 in file prac5.s
   Uses
      None
Comment: VICSoftInt unused
VICSoftIntClear FFFFF01C

Symbol: VICSoftIntClear



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 38 in file prac5.s
   Uses
      None
Comment: VICSoftIntClear unused
VICVectAddr FFFFF030

Symbol: VICVectAddr
   Definitions
      At line 40 in file prac5.s
   Uses
      At line 718 in file prac5.s
      At line 798 in file prac5.s

VICVectAddr0 FFFFF100

Symbol: VICVectAddr0
   Definitions
      At line 39 in file prac5.s
   Uses
      At line 61 in file prac5.s
      At line 71 in file prac5.s
      At line 668 in file prac5.s
      At line 676 in file prac5.s

inicar 40007FEC

Symbol: inicar
   Definitions
      At line 16 in file prac5.s
   Uses
      At line 206 in file prac5.s
Comment: inicar used once
lvltime 000001F4

Symbol: lvltime
   Definitions
      At line 28 in file prac5.s
   Uses
      At line 178 in file prac5.s
Comment: lvltime used once
primer 40007E00

Symbol: primer
   Definitions
      At line 12 in file prac5.s
   Uses
      At line 104 in file prac5.s
      At line 184 in file prac5.s
      At line 195 in file prac5.s
      At line 251 in file prac5.s
      At line 324 in file prac5.s
      At line 339 in file prac5.s
      At line 344 in file prac5.s
      At line 360 in file prac5.s
      At line 369 in file prac5.s
      At line 451 in file prac5.s
      At line 587 in file prac5.s
      At line 605 in file prac5.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


texto 40007EE8

Symbol: texto
   Definitions
      At line 19 in file prac5.s
   Uses
      At line 117 in file prac5.s
      At line 614 in file prac5.s
      At line 623 in file prac5.s
      At line 650 in file prac5.s

ultim 40007FE0

Symbol: ultim
   Definitions
      At line 13 in file prac5.s
   Uses
      At line 105 in file prac5.s
      At line 185 in file prac5.s
      At line 197 in file prac5.s
      At line 254 in file prac5.s
      At line 452 in file prac5.s
      At line 584 in file prac5.s
      At line 606 in file prac5.s

15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rand 00000000

Symbol: rand
   Definitions
      At line 55 in file prac5.s
   Uses
      At line 397 in file prac5.s
Comment: rand used once
srand 00000000

Symbol: srand
   Definitions
      At line 54 in file prac5.s
   Uses
      At line 88 in file prac5.s
Comment: srand used once
2 symbols
433 symbols in table
