


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             datos,DATA
    2 00000000         ;vuestras variables y constantes
    3 00000000 00000000 
                       reloj   DCD              0           ;contador de centes
                                                            imas de segundo
    4 00000004 00000008 
                       max     DCD              8           ;velocidad de movim
                                                            iento (en centesima
                                                            s s.)
    5 00000008 00000000 
                       cont    DCD              0           ;instante siguiente
                                                             movimiento
    6 0000000C 00      dirx    DCB              0           ;direccion mov. car
                                                            acter ‘H’ (-1 izda.
                                                            ,0 stop,1 der.)
    7 0000000D 00      diry    DCB              0           ;direccion mov. car
                                                            acter ‘H’ (-1 arrib
                                                            a,0 stop,1 abajo)
    8 0000000E 00      fin     DCB              0           ;indicador fin de p
                                                            rograma (si vale 1)
                                                            
    9 0000000F         
   10 0000000F 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       road    SPACE            16
   11 0000001F 0F      roadi   DCB              15
   12 00000020 40007E00 
                       primer  EQU              0x40007E00
   13 00000020 40007FE0 
                       ultim   EQU              0x40007FE0
   14 00000020 08      spr     DCB              8
   15 00000021 00      sprm    DCB              0
   16 00000022 00 00 40007FEC 
                       coche   DCD              0x40007FEC
   17 00000028 47 41 4D 
              45 4F 56 
              45 52 20 mensa   DCB              "GAMEOVER "
   18 00000031 40007F28 
                       texto   EQU              0x40007F28
   19 00000031         
   20 00000031 FFFFF010 
                       VICIntEnable
                               EQU              0xFFFFF010  ;activar IRQs
   21 00000031 FFFFF014 
                       VICIntEnClr
                               EQU              0xFFFFF014  ;desactivar IRQs
   22 00000031 FFFFF018 
                       VICSoftInt
                               EQU              0xFFFFF018  ;generar IRQs SW
   23 00000031 FFFFF01C 
                       VICSoftIntClear
                               EQU              0xFFFFF01C  ;bajar IRQs SW
   24 00000031 FFFFF100 
                       VICVectAddr0
                               EQU              0xFFFFF100  ;vector interrupcio
                                                            nes



ARM Macro Assembler    Page 2 


   25 00000031 FFFFF030 
                       VICVectAddr
                               EQU              0xFFFFF030  ;registro para EOI
   26 00000031         
   27 00000031 E0010000 
                       TEC_DAT EQU              0xE0010000  ;reg. dato teclado 
                                                            UART1
   28 00000031         
   29 00000031 E0028004 
                       IOSET   EQU              0xE0028004  ;reg. datos GPIO(ac
                                                            tivar)
   30 00000031 E002800C 
                       IOCLR   EQU              0xE002800C  ;reg. datos GPIP(de
                                                            sactivar)
   31 00000031 E0004000 
                       TO_IR   EQU              0xE0004000  ;reg. para bajar pe
                                                            ticiones IRQ4
   32 00000031 00      vac     DCB              0
   33 00000032 00 00 00000000 
                       reloj_so
                               DCD              0           ;var. para @RSI_tim
                                                            er_SO
   34 00000038 00000000 
                       tecl_so DCD              0           ;var para @RSI_tecl
                                                            ado_so
   35 0000003C         
   36 0000003C         
   37 0000003C                 AREA             codigo,CODE
   38 00000000                 EXPORT           inicio      ; forma de enlazar 
                                                            con el startup.s
   39 00000000                 IMPORT           srand       ; para poder invoca
                                                            r SBR srand
   40 00000000                 IMPORT           rand        ; para poder invoca
                                                            r SBR srand
   41 00000000         inicio                               ; se recomienda pon
                                                            er punto de parada 
                                                            (breakpoint) en la 
                                                            primera
   42 00000000         ; instruccion de código para poder ejecutar todo el Star
                       tup de golpe
   43 00000000         
   44 00000000         
   45 00000000         ;programar @IRQ4 -> RSI_reloj
   46 00000000 E59F04FC        LDR              r0,=VICVectAddr0
   47 00000004 E59F14FC        LDR              r1,=reloj_so
   48 00000008 E3A02004        mov              r2,#4
   49 0000000C E7903102        ldr              r3, [r0,r2,LSL #2]
   50 00000010 E5813000        str              r3, [r1]
   51 00000014         
   52 00000014 E59F14F0        LDR              r1,=RSI_reloj
   53 00000018 E7801102        str              r1, [r0,r2,LSL #2]
   54 0000001C         
   55 0000001C         ;programar @IRQ7 -> RSI_teclado
   56 0000001C E59F04E0        LDR              r0,=VICVectAddr0
   57 00000020 E59F14E8        LDR              r1,=tecl_so
   58 00000024 E3A02007        mov              r2,#7
   59 00000028 E7903102        ldr              r3, [r0,r2,LSL #2]
   60 0000002C E5813000        str              r3, [r1]
   61 00000030         



ARM Macro Assembler    Page 3 


   62 00000030 E59F14DC        LDR              r1,=RSI_teclado
   63 00000034 E7801102        str              r1, [r0,r2,LSL #2]
   64 00000038         
   65 00000038         ;activar IRQ4,IRQ7
   66 00000038 E59F04D8        LDR              r0,=VICIntEnable
   67 0000003C E3A01090        mov              r1,#2_10010000
   68 00000040 E5801000        str              r1, [r0]
   69 00000044         
   70 00000044         ;llama a srand
   71 00000044 E3A00003        mov              r0, #3
   72 00000048 E52D0004        PUSH             {r0}
   73 0000004C EBFFFFFE        bl               srand
   74 00000050 E28DD004        add              sp, sp, #4
   75 00000054         
   76 00000054         ;inicializar road
   77 00000054         
   78 00000054 E59F04C0        ldr              r0,=road
   79 00000058 E3A01000        mov              r1,#0
   80 0000005C E3A02008        mov              r2,#8
   81 00000060 E3510010 
                       iniroad cmp              r1,#16
   82 00000064 17C02001        strbne           r2,[r0,r1]
   83 00000068 12811001        addne            r1,r1,#1
   84 0000006C 1AFFFFFB        bne              iniroad
   85 00000070         
   86 00000070         ;dibujar pantalla inicial
   87 00000070         
   88 00000070 E59F04A8        ldr              r0,=primer
   89 00000074 E3A02023        mov              r2,#'#'
   90 00000078 E59F14A4        ldr              r1,=ultim
   91 0000007C E1510000 
                       dcarre  cmp              r1,r0       ;dibujo la carreter
                                                            a
   92 00000080 4A000003        bmi              dcoche
   93 00000084 E5C02008        strb             r2,[r0,#8]
   94 00000088 E5C02010        strb             r2,[r0,#16]
   95 0000008C E2800020        add              r0,r0,#32
   96 00000090 EAFFFFF9        b                dcarre
   97 00000094         
   98 00000094 E59F048C 
                       dcoche  ldr              r0,=coche
   99 00000098 E5900000        ldr              r0,[r0]
  100 0000009C E3A01048        mov              r1,#'H'
  101 000000A0 E5C01000        strb             r1,[r0]
  102 000000A4         
  103 000000A4         ;si toca mover coche
  104 000000A4 E59F0480 
                       bucle   ldr              r0,=dirx    ;compruebo si hay q
                                                            ue mover en eje x
  105 000000A8 E1D000D0        ldrsb            r0,[r0]
  106 000000AC E3500000        cmp              r0,#0
  107 000000B0 0A000011        beq              ejey
  108 000000B4 E59F146C        ldr              r1,=coche
  109 000000B8 E5913000        ldr              r3,[r1]
  110 000000BC E3A02000        mov              r2,#0
  111 000000C0 E5C32000        strb             r2,[r3]     ;borro el coche
  112 000000C4 E0833000        add              r3,r3,r0
  113 000000C8         
  114 000000C8 E5D37000        ldrb             r7,[r3]



ARM Macro Assembler    Page 4 


  115 000000CC E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  116 000000D0 0A000003        beq              choc1
  117 000000D4 E59F0454        ldr              r0,=fin
  118 000000D8 E3A01001        mov              r1,#1
  119 000000DC E5C01000        strb             r1,[r0]
  120 000000E0 EA000097        b                sifin
  121 000000E4         
  122 000000E4 E3A02048 
                       choc1   mov              r2,#'H'
  123 000000E8 E5C32000        strb             r2,[r3]     ;dibujo coche nuevo
                                                            
  124 000000EC         
  125 000000EC E5813000        str              r3,[r1]     ;actualizo @coche
  126 000000F0         
  127 000000F0 E3A01000        mov              r1,#0
  128 000000F4 E59F0430        ldr              r0,=dirx
  129 000000F8 E5C01000        strb             r1,[r0]     ;actualizo dirx=0
  130 000000FC         
  131 000000FC E59F0430 
                       ejey    ldr              r0,=diry    ;compruebo si hay q
                                                            ue mover en eje y
  132 00000100 E1D000D0        ldrsb            r0,[r0]
  133 00000104 E3500000        cmp              r0,#0
  134 00000108 0A00001B        beq              carrt
  135 0000010C E59F1414        ldr              r1,=coche
  136 00000110 E5913000        ldr              r3,[r1]
  137 00000114         
  138 00000114 E3A02020        mov              r2,#32
  139 00000118 E3500001        cmp              r0,#1
  140 0000011C 00434002        subeq            r4,r3,r2
  141 00000120 10834002        addne            r4,r3,r2
  142 00000124 E59F53F4        ldr              r5,=primer
  143 00000128 E1540005        cmp              r4,r5
  144 0000012C 4A000012        bmi              carrt
  145 00000130 E59F53EC        ldr              r5,=ultim
  146 00000134 E0855002        add              r5,r5,r2
  147 00000138 E1540005        cmp              r4,r5
  148 0000013C 5A00000E        bpl              carrt
  149 00000140         
  150 00000140 E3A02000        mov              r2,#0
  151 00000144 E5C32000        strb             r2,[r3]     ;borro el coche
  152 00000148         
  153 00000148 E5D37000        ldrb             r7,[r3]
  154 0000014C E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  155 00000150 0A000003        beq              choc2
  156 00000154 E59F03D4        ldr              r0,=fin
  157 00000158 E3A01001        mov              r1,#1
  158 0000015C E5C01000        strb             r1,[r0]
  159 00000160 EA000077        b                sifin
  160 00000164         
  161 00000164 E3A02048 
                       choc2   mov              r2,#'H'
  162 00000168 E5C42000        strb             r2,[r4]     ;dibujo coche nuevo
                                                            
  163 0000016C         
  164 0000016C E5814000        str              r4,[r1]     ;actualizo @coche
  165 00000170         



ARM Macro Assembler    Page 5 


  166 00000170 E3A01000        mov              r1,#0
  167 00000174 E59F03B8        ldr              r0,=diry    ;actualizo diry=0
  168 00000178 E5C01000        strb             r1,[r0]
  169 0000017C         
  170 0000017C         
  171 0000017C         ;si toca mover carretera
  172 0000017C E59F03B4 
                       carrt   ldr              r0,=cont
  173 00000180 E5901000        ldr              r1,[r0]
  174 00000184 E3510000        cmp              r1,#0       ;comprobamos que el
                                                             contador=0
  175 00000188 1A00006D        bne              sifin
  176 0000018C         
  177 0000018C E59F13A8        ldr              r1,=max
  178 00000190 E5911000        ldr              r1,[r1]
  179 00000194 E5801000        str              r1,[r0]     ;reiniciamos el con
                                                            tador
  180 00000198         
  181 00000198 E24DD004        sub              sp, sp, #4
  182 0000019C EBFFFFFE        bl               rand        ;conseguimos el num
                                                            ero aleatorio
  183 000001A0 E49D0004        pop              {r0}
  184 000001A4 E1A00EA0        mov              r0,r0,LSR #29 ;le hacemos modul
                                                            o 3
  185 000001A8         
  186 000001A8 E3500000        cmp              r0,#0       ;si es 0 permanecer
                                                            a quieto
  187 000001AC 1A000001        bne              uno
  188 000001B0 E3A03000        mov              r3,#0
  189 000001B4 EA000008        b                mueve
  190 000001B8         
  191 000001B8 E3500001 
                       uno     cmp              r0,#1       ;si es 1 se movera 
                                                            a la derecha
  192 000001BC 1A000001        bne              dos
  193 000001C0 E3A03001        mov              r3,#1
  194 000001C4 EA000004        b                mueve
  195 000001C8         
  196 000001C8 E3500002 
                       dos     cmp              r0,#2       ;si es 2 se movera 
                                                            igual que el ultimo
                                                            
  197 000001CC 13E03000        movne            r3,#-1      ;sino es que es 3 y
                                                             se movera a la izq
                                                            uierda
  198 000001D0 1A000001        bne              mueve
  199 000001D4 E59F3364        ldr              r3,=sprm    ;guardamos en r3 el
                                                             siguiente mov
  200 000001D8 E1D330D0        ldrsb            r3,[r3]
  201 000001DC         
  202 000001DC E59F0338 
                       mueve   ldr              r0,=road    ;r0=@road
  203 000001E0 E59F135C        ldr              r1,=roadi
  204 000001E4 E5D11000        ldrb             r1,[r1]     ;r1=indice del ulti
                                                            mo elemento
  205 000001E8 E1A05001        mov              r5,r1       ;guardo en r5 el in
                                                            dice del suprimido
  206 000001EC E0800001        add              r0,r0,r1
  207 000001F0 E1A02000        mov              r2,r0       ;r2=@elemento a sup



ARM Macro Assembler    Page 6 


                                                            rimir
  208 000001F4 E5D00000        ldrb             r0,[r0]
  209 000001F8 E59F4348        ldr              r4,=spr     ;guardamos en spr l
                                                            a pos del elemento 
                                                            suprimido
  210 000001FC E5C40000        strb             r0,[r4]
  211 00000200         
  212 00000200 E351000F        cmp              r1,#15
  213 00000204 059F4310        ldreq            r4,=road
  214 00000208 05D44000        ldrbeq           r4,[r4]     ;guardamos en r4 la
                                                             nueva posicion
  215 0000020C 15D24001        ldrbne           r4,[r2,#1]
  216 00000210 E0844003        add              r4,r4,r3
  217 00000214         
  218 00000214 E3540000        cmp              r4,#0       ;comprobamos los li
                                                            mites izq y der
  219 00000218 43A04000        movmi            r4,#0
  220 0000021C E3540017        cmp              r4,#23
  221 00000220 53A04017        movpl            r4,#23
  222 00000224         
  223 00000224 E5C24000        strb             r4,[r2]     ;guardamos el nuevo
                                                             elemento
  224 00000228         
  225 00000228 E59F0310        ldr              r0,=sprm
  226 0000022C E5C03000        strb             r3,[r0]
  227 00000230 E59F130C        ldr              r1,=roadi
  228 00000234 E5D10000        ldrb             r0,[r1]     ;actualizo las var 
                                                            sprm y roadi
  229 00000238 E3500000        cmp              r0,#0
  230 0000023C 03A0000F        moveq            r0,#15
  231 00000240 12400001        subne            r0,r0,#1
  232 00000244 E5C10000        strb             r0,[r1]
  233 00000248         ;ya he calculado todas las posiciones de la nueva
  234 00000248         ;carretera y ahora queda dibujarla
  235 00000248         
  236 00000248 E59F02D0        ldr              r0,=primer
  237 0000024C E59F12D0        ldr              r1,=ultim
  238 00000250 E3A02023        mov              r2,#'#'
  239 00000254 E3A06000        mov              r6,#0
  240 00000258 E59F42BC        ldr              r4,=road
  241 0000025C         
  242 0000025C E1510000 
                       dibuj   cmp              r1,r0
  243 00000260 0A000020        beq              ultimo
  244 00000264         
  245 00000264 E355000F        cmp              r5,#15      ;borro el limite iz
                                                            q
  246 00000268 53A05000        movpl            r5,#0
  247 0000026C 12855001        addne            r5,r5,#1
  248 00000270 E7D43005        ldrb             r3,[r4,r5]
  249 00000274 E7C06003        strb             r6,[r0,r3]
  250 00000278 E2833008        add              r3,r3,#8    ;borro el limite de
                                                            recho
  251 0000027C E7C06003        strb             r6,[r0,r3]
  252 00000280         
  253 00000280 E3550000        cmp              r5,#0       ;compruebo siempre 
                                                            si el indice ha
  254 00000284 03A0500F        moveq            r5,#15      ;llegado a 0 o a 15
                                                             para hacer que rot



ARM Macro Assembler    Page 7 


                                                            e
  255 00000288 12455001        subne            r5,r5,#1
  256 0000028C         
  257 0000028C E7D43005        ldrb             r3,[r4,r5]
  258 00000290         
  259 00000290 E7D07003        ldrb             r7,[r0,r3]
  260 00000294 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  261 00000298 0A000003        beq              choc5
  262 0000029C E59F028C        ldr              r0,=fin
  263 000002A0 E3A01001        mov              r1,#1
  264 000002A4 E5C01000        strb             r1,[r0]
  265 000002A8 EA000025        b                sifin
  266 000002AC         
  267 000002AC E7C02003 
                       choc5   strb             r2,[r0,r3]  ;escribo el nuevo l
                                                            imite izq
  268 000002B0 E2833008        add              r3,r3,#8
  269 000002B4         
  270 000002B4 E7D07003        ldrb             r7,[r0,r3]
  271 000002B8 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  272 000002BC 0A000003        beq              choc6
  273 000002C0 E59F0268        ldr              r0,=fin
  274 000002C4 E3A01001        mov              r1,#1
  275 000002C8 E5C01000        strb             r1,[r0]
  276 000002CC EA00001C        b                sifin
  277 000002D0         
  278 000002D0 E7C02003 
                       choc6   strb             r2,[r0,r3]  ;escribo el nuevo l
                                                            imite der
  279 000002D4         
  280 000002D4 E355000F        cmp              r5,#15
  281 000002D8 53A05000        movpl            r5,#0
  282 000002DC 12855001        addne            r5,r5,#1
  283 000002E0 E2800020        add              r0,r0,#32
  284 000002E4 EAFFFFDC        b                dibuj
  285 000002E8         
  286 000002E8         ;Borro y escribo el ultimo elemento de la carretera
  287 000002E8         
  288 000002E8 E59F1258 
                       ultimo  ldr              r1,=spr     ;esta vez cojo el e
                                                            lemento de la var s
                                                            pr
  289 000002EC E5D11000        ldrb             r1,[r1]
  290 000002F0 E7C06001        strb             r6,[r0,r1]
  291 000002F4         
  292 000002F4 E2811008        add              r1,r1,#8    ;lo borro
  293 000002F8 E7C06001        strb             r6,[r0,r1]
  294 000002FC         
  295 000002FC E7D43005        ldrb             r3,[r4,r5]
  296 00000300         
  297 00000300 E7D07003        ldrb             r7,[r0,r3]
  298 00000304 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  299 00000308 0A000003        beq              choc3
  300 0000030C E59F021C        ldr              r0,=fin
  301 00000310 E3A01001        mov              r1,#1
  302 00000314 E5C01000        strb             r1,[r0]



ARM Macro Assembler    Page 8 


  303 00000318 EA000009        b                sifin
  304 0000031C         
  305 0000031C E7C02003 
                       choc3   strb             r2,[r0,r3]  ;y lo escribo
  306 00000320 E2833008        add              r3,r3,#8
  307 00000324         
  308 00000324 E7D07003        ldrb             r7,[r0,r3]
  309 00000328 E3570000        cmp              r7,#0       ;compruebo si se ha
                                                             chocado
  310 0000032C 0A000003        beq              choc4
  311 00000330 E59F01F8        ldr              r0,=fin
  312 00000334 E3A01001        mov              r1,#1
  313 00000338 E5C01000        strb             r1,[r0]
  314 0000033C EA000000        b                sifin
  315 00000340         
  316 00000340 E7C02003 
                       choc4   strb             r2,[r0,r3]
  317 00000344         
  318 00000344         ;si fin=0 salto a bucle
  319 00000344 E59F01E4 
                       sifin   ldr              r0,=fin
  320 00000348 E5D00000        ldrb             r0,[r0]
  321 0000034C E3500000        cmp              r0,#0
  322 00000350 0AFFFF53        beq              bucle
  323 00000354         
  324 00000354         
  325 00000354 E59F01F0        ldr              r0,=texto   ;GAME OVER
  326 00000358 E59F11F0        ldr              r1,=mensa
  327 0000035C E5912000        ldr              r2,[r1]
  328 00000360 E5802000        str              r2,[r0]
  329 00000364 E2811004        add              r1,r1,#4
  330 00000368 E2800008        add              r0,r0,#8
  331 0000036C E5912000        ldr              r2,[r1]
  332 00000370 E5802000        str              r2,[r0]
  333 00000374         
  334 00000374         ;desactivar IRQ4,IRQ7
  335 00000374 E59F01D8        LDR              r0, =VICIntEnClr
  336 00000378 E3A01090        mov              r1, #2_10010000
  337 0000037C E5801000        str              r1, [r0]
  338 00000380         
  339 00000380         ;desactivar RSI_reloj
  340 00000380         
  341 00000380 E59F017C        LDR              r0, =VICVectAddr0
  342 00000384 E59F117C        LDR              r1,=reloj_so
  343 00000388 E5911000        ldr              r1, [r1]
  344 0000038C E3A02004        mov              r2, #4
  345 00000390 E7801102        str              r1, [r0,r2,LSL #2]
  346 00000394         
  347 00000394         ;desactivar RSI_boton
  348 00000394         
  349 00000394 E59F0168        LDR              r0, =VICVectAddr0
  350 00000398 E59F1170        LDR              r1,=tecl_so
  351 0000039C E5911000        ldr              r1, [r1]
  352 000003A0 E3A02007        mov              r2, #7
  353 000003A4 E7801102        str              r1, [r0,r2,LSL #2]
  354 000003A8         
  355 000003A8 EAFFFFFE 
                       bfin    b                bfin
  356 000003AC         



ARM Macro Assembler    Page 9 


  357 000003AC         
  358 000003AC         
  359 000003AC         
  360 000003AC         RSI_reloj                            ;Rutina de servicio
                                                             a la interrupcion 
                                                            IRQ4 (timer 0)
  361 000003AC         ;Cada 0,01 s. llega una peticion de interrupcion
  362 000003AC         
  363 000003AC E24EE004        sub              lr,lr,#4
  364 000003B0 E52DE004        PUSH             {lr}
  365 000003B4 E14FE000        mrs              r14,spsr
  366 000003B8 E52DE004        PUSH             {r14}
  367 000003BC E321F052        msr              cpsr_c,#2_01010010
  368 000003C0         
  369 000003C0 E92D0003        PUSH{r0-r1}
  370 000003C4         
  371 000003C4 E59F018C        LDR              r0,=TO_IR
  372 000003C8 E3A01001        mov              r1,#1
  373 000003CC E5801000        str              r1,[r0]
  374 000003D0         
  375 000003D0 E59F0160        LDR              r0,=cont
  376 000003D4 E5901000        ldr              r1, [r0]
  377 000003D8 E3510000        cmp              r1, #0
  378 000003DC 0A000001        beq              finreloj
  379 000003E0 E2411001        sub              r1, r1, #1
  380 000003E4 E5801000        str              r1, [r0]
  381 000003E8         
  382 000003E8 E8BD0003 
                       finreloj
                               POP{r0-r1}
  383 000003EC E321F0D2        msr              cpsr_c, #2_11010010
  384 000003F0 E49DE004        POP{r14}
  385 000003F4 E16FF00E        msr              spsr_fsxc,r14
  386 000003F8 E59FE15C        LDR              r14,=VICVectAddr
  387 000003FC E58EE000        str              r14,[r14]
  388 00000400 E8FD8000        POP{pc}^
  389 00000404         
  390 00000404         RSI_teclado                          ;Rutina de servicio
                                                             a la interrupcion 
                                                            IRQ7 (teclado)
  391 00000404         ;al pulsar cada tecla llega peticion de interrupcion IRQ
                       7
  392 00000404         
  393 00000404 E24EE004        sub              lr,lr,#4
  394 00000408 E52DE004        PUSH             {lr}
  395 0000040C E14FE000        mrs              r14,spsr
  396 00000410 E52DE004        PUSH             {r14}
  397 00000414 E321F052        msr              cpsr_c,#2_01010010
  398 00000418         
  399 00000418 E92D0003        PUSH{r0-r1}
  400 0000041C         
  401 0000041C E59F113C        LDR              r1,=TEC_DAT
  402 00000420 E5D10000        ldrb             r0,[r1]
  403 00000424 E350002B 
                       mas     cmp              r0,#43
  404 00000428 1A000006        bne              menos
  405 0000042C E59F1108        ldr              r1,=max
  406 00000430 E5910000        ldr              r0,[r1]
  407 00000434 E3500001        cmp              r0,#1



ARM Macro Assembler    Page 10 


  408 00000438 0A00002A        beq              fintec
  409 0000043C E1A000A0        mov              r0,r0,LSR #1
  410 00000440 E5810000        str              r0,[r1]
  411 00000444 EA000027        b                fintec
  412 00000448         
  413 00000448 E350002D 
                       menos   cmp              r0,#45
  414 0000044C 1A000006        bne              mayus
  415 00000450 E59F10E4        ldr              r1,=max
  416 00000454 E5910000        ldr              r0,[r1]
  417 00000458 E3500080        cmp              r0,#128
  418 0000045C 0A000021        beq              fintec
  419 00000460 E1A00080        mov              r0,r0,LSL #1
  420 00000464 E5810000        str              r0,[r1]
  421 00000468 EA00001E        b                fintec
  422 0000046C         
  423 0000046C E3C00020 
                       mayus   bic              r0,r0,#2_100000 ;transformo a m
                                                            ayusculas
  424 00000470         
  425 00000470         
  426 00000470 E350004A 
                       j       cmp              r0,#74
  427 00000474 1A000003        bne              l
  428 00000478 E59F00AC        ldr              r0,=dirx
  429 0000047C E3E01000        mov              r1,#-1
  430 00000480 E5C01000        strb             r1,[r0]
  431 00000484 EA000017        b                fintec
  432 00000488         
  433 00000488 E350004C 
                       l       cmp              r0,#76
  434 0000048C 1A000003        bne              i
  435 00000490 E59F0094        ldr              r0,=dirx
  436 00000494 E3A01001        mov              r1,#1
  437 00000498 E5C01000        strb             r1,[r0]
  438 0000049C EA000011        b                fintec
  439 000004A0         
  440 000004A0 E3500049 
                       i       cmp              r0,#73
  441 000004A4 1A000003        bne              k
  442 000004A8 E59F0084        ldr              r0,=diry
  443 000004AC E3A01001        mov              r1,#1
  444 000004B0 E5C01000        strb             r1,[r0]
  445 000004B4 EA00000B        b                fintec
  446 000004B8         
  447 000004B8 E350004B 
                       k       cmp              r0,#75
  448 000004BC 1A000003        bne              q
  449 000004C0 E59F006C        ldr              r0,=diry
  450 000004C4 E3E01000        mov              r1,#-1
  451 000004C8 E5C01000        strb             r1,[r0]
  452 000004CC EA000005        b                fintec
  453 000004D0         
  454 000004D0 E3500051 
                       q       cmp              r0,#81
  455 000004D4 1A000003        bne              fintec
  456 000004D8 E59F1050        ldr              r1,=fin
  457 000004DC E3A00001        mov              r0,#1
  458 000004E0 E5C10000        strb             r0,[r1]



ARM Macro Assembler    Page 11 


  459 000004E4 EAFFFFFF        b                fintec
  460 000004E8         
  461 000004E8 E8BD0003 
                       fintec  POP{r0-r1}
  462 000004EC         
  463 000004EC E321F0D2        msr              cpsr_c, #2_11010010
  464 000004F0 E49DE004        POP{r14}
  465 000004F4 E16FF00E        msr              spsr_fsxc,r14
  466 000004F8 E59FE05C        LDR              r14,=VICVectAddr
  467 000004FC E58EE000        str              r14,[r14]
  468 00000500 E8FD8000        POP{pc}^
  469 00000504         
  470 00000504                 END
              FFFFF100 
              00000000 
              00000000 
              00000000 
              00000000 
              FFFFF010 
              00000000 
              40007E00 
              40007FE0 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              40007F28 
              00000000 
              FFFFF014 
              E0004000 
              FFFFF030 
              E0010000 
Command Line: --debug --xref --apcs=interwork --depend=prac5.d -oprac5.o -IE:\P
rogramas\Keil\ARM\INC -IE:\Programas\Keil\ARM\INC\Philips --predefine="__EVAL S
ETA 1" --list=prac5.lst prac5.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

coche 00000024

Symbol: coche
   Definitions
      At line 16 in file prac5.s
   Uses
      At line 98 in file prac5.s
      At line 108 in file prac5.s
      At line 135 in file prac5.s

cont 00000008

Symbol: cont
   Definitions
      At line 5 in file prac5.s
   Uses
      At line 172 in file prac5.s
      At line 375 in file prac5.s

datos 00000000

Symbol: datos
   Definitions
      At line 1 in file prac5.s
   Uses
      None
Comment: datos unused
dirx 0000000C

Symbol: dirx
   Definitions
      At line 6 in file prac5.s
   Uses
      At line 104 in file prac5.s
      At line 128 in file prac5.s
      At line 428 in file prac5.s
      At line 435 in file prac5.s

diry 0000000D

Symbol: diry
   Definitions
      At line 7 in file prac5.s
   Uses
      At line 131 in file prac5.s
      At line 167 in file prac5.s
      At line 442 in file prac5.s
      At line 449 in file prac5.s

fin 0000000E

Symbol: fin
   Definitions
      At line 8 in file prac5.s
   Uses
      At line 117 in file prac5.s
      At line 156 in file prac5.s
      At line 262 in file prac5.s
      At line 273 in file prac5.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 300 in file prac5.s
      At line 311 in file prac5.s
      At line 319 in file prac5.s
      At line 456 in file prac5.s

max 00000004

Symbol: max
   Definitions
      At line 4 in file prac5.s
   Uses
      At line 177 in file prac5.s
      At line 405 in file prac5.s
      At line 415 in file prac5.s

mensa 00000028

Symbol: mensa
   Definitions
      At line 17 in file prac5.s
   Uses
      At line 326 in file prac5.s
Comment: mensa used once
reloj 00000000

Symbol: reloj
   Definitions
      At line 3 in file prac5.s
   Uses
      None
Comment: reloj unused
reloj_so 00000034

Symbol: reloj_so
   Definitions
      At line 33 in file prac5.s
   Uses
      At line 47 in file prac5.s
      At line 342 in file prac5.s

road 0000000F

Symbol: road
   Definitions
      At line 10 in file prac5.s
   Uses
      At line 78 in file prac5.s
      At line 202 in file prac5.s
      At line 213 in file prac5.s
      At line 240 in file prac5.s

roadi 0000001F

Symbol: roadi
   Definitions
      At line 11 in file prac5.s
   Uses
      At line 203 in file prac5.s
      At line 227 in file prac5.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


spr 00000020

Symbol: spr
   Definitions
      At line 14 in file prac5.s
   Uses
      At line 209 in file prac5.s
      At line 288 in file prac5.s

sprm 00000021

Symbol: sprm
   Definitions
      At line 15 in file prac5.s
   Uses
      At line 199 in file prac5.s
      At line 225 in file prac5.s

tecl_so 00000038

Symbol: tecl_so
   Definitions
      At line 34 in file prac5.s
   Uses
      At line 57 in file prac5.s
      At line 350 in file prac5.s

vac 00000031

Symbol: vac
   Definitions
      At line 32 in file prac5.s
   Uses
      None
Comment: vac unused
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RSI_reloj 000003AC

Symbol: RSI_reloj
   Definitions
      At line 360 in file prac5.s
   Uses
      At line 52 in file prac5.s
Comment: RSI_reloj used once
RSI_teclado 00000404

Symbol: RSI_teclado
   Definitions
      At line 390 in file prac5.s
   Uses
      At line 62 in file prac5.s
Comment: RSI_teclado used once
bfin 000003A8

Symbol: bfin
   Definitions
      At line 355 in file prac5.s
   Uses
      At line 355 in file prac5.s
Comment: bfin used once
bucle 000000A4

Symbol: bucle
   Definitions
      At line 104 in file prac5.s
   Uses
      At line 322 in file prac5.s
Comment: bucle used once
carrt 0000017C

Symbol: carrt
   Definitions
      At line 172 in file prac5.s
   Uses
      At line 134 in file prac5.s
      At line 144 in file prac5.s
      At line 148 in file prac5.s

choc1 000000E4

Symbol: choc1
   Definitions
      At line 122 in file prac5.s
   Uses
      At line 116 in file prac5.s
Comment: choc1 used once
choc2 00000164

Symbol: choc2
   Definitions
      At line 161 in file prac5.s
   Uses
      At line 155 in file prac5.s
Comment: choc2 used once
choc3 0000031C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: choc3
   Definitions
      At line 305 in file prac5.s
   Uses
      At line 299 in file prac5.s
Comment: choc3 used once
choc4 00000340

Symbol: choc4
   Definitions
      At line 316 in file prac5.s
   Uses
      At line 310 in file prac5.s
Comment: choc4 used once
choc5 000002AC

Symbol: choc5
   Definitions
      At line 267 in file prac5.s
   Uses
      At line 261 in file prac5.s
Comment: choc5 used once
choc6 000002D0

Symbol: choc6
   Definitions
      At line 278 in file prac5.s
   Uses
      At line 272 in file prac5.s
Comment: choc6 used once
codigo 00000000

Symbol: codigo
   Definitions
      At line 37 in file prac5.s
   Uses
      None
Comment: codigo unused
dcarre 0000007C

Symbol: dcarre
   Definitions
      At line 91 in file prac5.s
   Uses
      At line 96 in file prac5.s
Comment: dcarre used once
dcoche 00000094

Symbol: dcoche
   Definitions
      At line 98 in file prac5.s
   Uses
      At line 92 in file prac5.s
Comment: dcoche used once
dibuj 0000025C

Symbol: dibuj
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 242 in file prac5.s
   Uses
      At line 284 in file prac5.s
Comment: dibuj used once
dos 000001C8

Symbol: dos
   Definitions
      At line 196 in file prac5.s
   Uses
      At line 192 in file prac5.s
Comment: dos used once
ejey 000000FC

Symbol: ejey
   Definitions
      At line 131 in file prac5.s
   Uses
      At line 107 in file prac5.s
Comment: ejey used once
finreloj 000003E8

Symbol: finreloj
   Definitions
      At line 382 in file prac5.s
   Uses
      At line 378 in file prac5.s
Comment: finreloj used once
fintec 000004E8

Symbol: fintec
   Definitions
      At line 461 in file prac5.s
   Uses
      At line 408 in file prac5.s
      At line 411 in file prac5.s
      At line 418 in file prac5.s
      At line 421 in file prac5.s
      At line 431 in file prac5.s
      At line 438 in file prac5.s
      At line 445 in file prac5.s
      At line 452 in file prac5.s
      At line 455 in file prac5.s
      At line 459 in file prac5.s

i 000004A0

Symbol: i
   Definitions
      At line 440 in file prac5.s
   Uses
      At line 434 in file prac5.s
Comment: i used once
inicio 00000000

Symbol: inicio
   Definitions
      At line 41 in file prac5.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 38 in file prac5.s
Comment: inicio used once
iniroad 00000060

Symbol: iniroad
   Definitions
      At line 81 in file prac5.s
   Uses
      At line 84 in file prac5.s
Comment: iniroad used once
j 00000470

Symbol: j
   Definitions
      At line 426 in file prac5.s
   Uses
      None
Comment: j unused
k 000004B8

Symbol: k
   Definitions
      At line 447 in file prac5.s
   Uses
      At line 441 in file prac5.s
Comment: k used once
l 00000488

Symbol: l
   Definitions
      At line 433 in file prac5.s
   Uses
      At line 427 in file prac5.s
Comment: l used once
mas 00000424

Symbol: mas
   Definitions
      At line 403 in file prac5.s
   Uses
      None
Comment: mas unused
mayus 0000046C

Symbol: mayus
   Definitions
      At line 423 in file prac5.s
   Uses
      At line 414 in file prac5.s
Comment: mayus used once
menos 00000448

Symbol: menos
   Definitions
      At line 413 in file prac5.s
   Uses
      At line 404 in file prac5.s
Comment: menos used once
mueve 000001DC



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: mueve
   Definitions
      At line 202 in file prac5.s
   Uses
      At line 189 in file prac5.s
      At line 194 in file prac5.s
      At line 198 in file prac5.s

q 000004D0

Symbol: q
   Definitions
      At line 454 in file prac5.s
   Uses
      At line 448 in file prac5.s
Comment: q used once
sifin 00000344

Symbol: sifin
   Definitions
      At line 319 in file prac5.s
   Uses
      At line 120 in file prac5.s
      At line 159 in file prac5.s
      At line 175 in file prac5.s
      At line 265 in file prac5.s
      At line 276 in file prac5.s
      At line 303 in file prac5.s
      At line 314 in file prac5.s

ultimo 000002E8

Symbol: ultimo
   Definitions
      At line 288 in file prac5.s
   Uses
      At line 243 in file prac5.s
Comment: ultimo used once
uno 000001B8

Symbol: uno
   Definitions
      At line 191 in file prac5.s
   Uses
      At line 187 in file prac5.s
Comment: uno used once
33 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

IOCLR E002800C

Symbol: IOCLR
   Definitions
      At line 30 in file prac5.s
   Uses
      None
Comment: IOCLR unused
IOSET E0028004

Symbol: IOSET
   Definitions
      At line 29 in file prac5.s
   Uses
      None
Comment: IOSET unused
TEC_DAT E0010000

Symbol: TEC_DAT
   Definitions
      At line 27 in file prac5.s
   Uses
      At line 401 in file prac5.s
Comment: TEC_DAT used once
TO_IR E0004000

Symbol: TO_IR
   Definitions
      At line 31 in file prac5.s
   Uses
      At line 371 in file prac5.s
Comment: TO_IR used once
VICIntEnClr FFFFF014

Symbol: VICIntEnClr
   Definitions
      At line 21 in file prac5.s
   Uses
      At line 335 in file prac5.s
Comment: VICIntEnClr used once
VICIntEnable FFFFF010

Symbol: VICIntEnable
   Definitions
      At line 20 in file prac5.s
   Uses
      At line 66 in file prac5.s
Comment: VICIntEnable used once
VICSoftInt FFFFF018

Symbol: VICSoftInt
   Definitions
      At line 22 in file prac5.s
   Uses
      None
Comment: VICSoftInt unused
VICSoftIntClear FFFFF01C

Symbol: VICSoftIntClear



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 23 in file prac5.s
   Uses
      None
Comment: VICSoftIntClear unused
VICVectAddr FFFFF030

Symbol: VICVectAddr
   Definitions
      At line 25 in file prac5.s
   Uses
      At line 386 in file prac5.s
      At line 466 in file prac5.s

VICVectAddr0 FFFFF100

Symbol: VICVectAddr0
   Definitions
      At line 24 in file prac5.s
   Uses
      At line 46 in file prac5.s
      At line 56 in file prac5.s
      At line 341 in file prac5.s
      At line 349 in file prac5.s

primer 40007E00

Symbol: primer
   Definitions
      At line 12 in file prac5.s
   Uses
      At line 88 in file prac5.s
      At line 142 in file prac5.s
      At line 236 in file prac5.s

texto 40007F28

Symbol: texto
   Definitions
      At line 18 in file prac5.s
   Uses
      At line 325 in file prac5.s
Comment: texto used once
ultim 40007FE0

Symbol: ultim
   Definitions
      At line 13 in file prac5.s
   Uses
      At line 90 in file prac5.s
      At line 145 in file prac5.s
      At line 237 in file prac5.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rand 00000000

Symbol: rand
   Definitions
      At line 40 in file prac5.s
   Uses
      At line 182 in file prac5.s
Comment: rand used once
srand 00000000

Symbol: srand
   Definitions
      At line 39 in file prac5.s
   Uses
      At line 73 in file prac5.s
Comment: srand used once
2 symbols
390 symbols in table
